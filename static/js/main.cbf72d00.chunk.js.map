{"version":3,"sources":["utils/index.js","utils/map.js","actions/index.jsx","reducers/gameFilter.jsx","components/Body/Pokemon.jsx","utils/types.js","components/Body/LeftSideBar.jsx","components/Body/RightSideBar.jsx","components/Body/index.jsx","components/Header/Party.jsx","components/Header/navbar/TypeFilter.jsx","components/Header/navbar/GenerationFilter.jsx","components/Header/navbar/GameFilter.jsx","components/Header/navbar/CoverageFilter.jsx","components/Header/navbar/index.jsx","components/Header/index.jsx","components/Body/Footer.jsx","components/Page.jsx","components/Parties.jsx","reducers/typeFilter.jsx","reducers/generationFilter.jsx","reducers/pokemon.jsx","reducers/savedParties.jsx","reducers/index.jsx","createStore.js","App.jsx","serviceWorker.js","index.js"],"names":["url","map","addHalf","listOfHalfEffective","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","set","err","return","addDouble","listOfDoubleEffective","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Map","normal","addNormal","fire","addFire","water","addWater","electric","addElectric","grass","addGrass","ice","addIce","fighting","addFighting","poison","addPoison","ground","addGround","flying","addFlying","psychic","addPsychic","bug","addBug","rock","addRock","ghost","addGhost","dragon","addDragon","dark","addDark","steel","addSteel","fairy","addFairy","addAll","createMap","isStrongAgainst","pokemon","type","types","pokemonType","get","has","isTypeStrongAgainst","len","length","effectiveness1","effectiveness2","isAPartyMemberStrong","partyTypes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","isWeakAgainst","type1","isFilter","props","filter","generationFilter","gameFilter","typeFilter","addPokemonToStore","initialState","_i","_games","isGameFilter","state","arguments","action","game","gameToFlip","Object","objectSpread","hasOwnProperty","View","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","all","dispatch","fetch","concat","then","response","json","number","name","i","pokemonNumber","party","addPokemonToParty","region","generation","index","findIndex","result","push","gameFilterToAcronym","_this2","checkingParty","lackingCoverage","p","games","includes","getArrayFromMap","Number","parseInt","sort","a","b","locations","_this3","react_default","createElement","className","poke","image","src","alt","width","height","onClick","key","title","React","Component","connect","utils_types","LeftSideBar","count","style","marginLeft","textAlign","val","findStrengthCount","RightSideBar","findWeaknessCount","display","Body_LeftSideBar","Body_Pokemon","Body_RightSideBar","Party","removePokemonFromParty","addPokemonToGrid","newParty","partyMember","setUp","div","saveParty","TypeFilter","checked","selected","checkedName","checkBox","typeToFlip","data-toggle","aria-haspopup","aria-expanded","toggleAll","getNames","onChange","check","LeftHeader","generations","generationToFlip","defaultChecked","addRegionalName","gen","GameFilter","right","left","CoverageFilter","handleClick","Navbar","data-target","aria-controls","aria-label","id","navbar_TypeFilter","navbar_CoverageFilter","navbar_GameFilter","GenerationFilter","navbar","Header_Party","marginRight","components_Header","components_Body","Body_Footer","Parties","savedParties","parties","partyIndex","typeFilter_step","typeFilter_iterator","typeFilter_iteratorNormalCompletion","generationFilter_i","_generations","splice","find","x","indexOf","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getPartyTypes","console","log","combineReducers","persistConfig","storage","stateReconciler","hardSet","persistedReducer","persistReducer","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","App","es","integration_react","loading","react_router_dom","basename","process","react_router","exact","path","component","Page","to","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbf72d00.chunk.js","sourcesContent":["import { createMap } from './map';\r\n\r\nconst env = 'PROD';\r\n\r\nlet URL = '';\r\nif (env === 'DEV') {\r\n    URL = 'http://localhost:8000';\r\n} else {\r\n    URL = 'https://pure-caverns-33114.herokuapp.com';\r\n}\r\nexport const url = URL;\r\n\r\nconst map = createMap();\r\n\r\nexport function isStrongAgainst(pokemon, type) {\r\n    for (const pokemonType of pokemon.types) {\r\n        if (map.get(pokemonType).has(type) && map.get(pokemonType).get(type) === 2) return true;\r\n    }\r\n}\r\n\r\nexport function isTypeStrongAgainst(type, pokemon) {\r\n    const len = pokemon.types.length;\r\n    if (len !== 0) {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const effectiveness1 = map.get(type).get(pokemon.types[0]);\r\n            if (len === 1) return effectiveness1 === 2;\r\n            if (len === 2) {\r\n                if (map.get(type).has(pokemon.types[1])) {\r\n                    const effectiveness2 = map.get(type).get(pokemon.types[1]);\r\n                    if ((effectiveness1 === 2 && effectiveness2 >= 1) || (effectiveness2 === 2 && effectiveness1 >= 1)) return true;\r\n                } else if (effectiveness1 === 2) return true;\r\n            }\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPartyTypes(party) {\r\n    const result = [];\r\n    for (const partyMember of party) {\r\n        for (const type of partyMember.types) {\r\n            if (!result.includes(type)) {\r\n                result.push(type);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function isAPartyMemberStrong(partyTypes, pokemon) {\r\n    for (const type of partyTypes) {\r\n        if (isTypeStrongAgainst(type, pokemon)) { return true; }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isWeakAgainst(pokemon, type) {\r\n    if (pokemon.types.length === 1) {\r\n        if (map.get(type).has(pokemon.types[ 0 ]) && map.get(type).get(pokemon.types[ 0 ]) === 2) {\r\n            return true;\r\n        }\r\n    } else {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const type1 = map.get(type).get(pokemon.types[0]);\r\n            if (map.get(type).has(pokemon.types[1])) {\r\n                const type2 = map.get(type).get(pokemon.types[1]);\r\n                if (type1 * type2 >= 2) return true;\r\n            } else if (type1 === 2) return true;\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isFilter(props) {\r\n    for (const filter in props.generationFilter) {\r\n        if (!props.generationFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.gameFilter) {\r\n        if (props.gameFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.typeFilter) {\r\n        if (!props.typeFilter[filter]) return true;\r\n    }\r\n    return false;\r\n}\r\n","export function createMap() {\r\n    function addNormal(map) {\r\n        const normal = new Map();\r\n        addHalf(['Rock', 'Steel'], normal);\r\n        normal.set('Ghost', 0);\r\n        map.set('Normal', normal);\r\n    }\r\n    function addFire(map) {\r\n        const fire = new Map();\r\n        addHalf(['Fire', 'Water', 'Rock', 'Dragon'], fire);\r\n        addDouble(['Grass', 'Ice', 'Bug', 'Steel'], fire);\r\n        map.set('Fire', fire);\r\n    }\r\n    function addWater(map) {\r\n        const water = new Map();\r\n        addDouble(['Fire', 'Ground', 'Rock'], water);\r\n        addHalf(['Water', 'Grass', 'Dragon'], water);\r\n        map.set('Water', water);\r\n    }\r\n    function addElectric(map) {\r\n        const electric = new Map();\r\n        addDouble(['Water', 'Flying'], electric);\r\n        addHalf(['Electric', 'Grass', 'Dragon'], electric);\r\n        electric.set('Ground', 0);\r\n        map.set('Electric', electric);\r\n    }\r\n    function addGrass(map) {\r\n        const grass = new Map();\r\n        addHalf(['Fire', 'Grass', 'Poison', 'Flying', 'Bug', 'Dragon', 'Steel'], grass);\r\n        addDouble(['Water', 'Ground', 'Rock'], grass);\r\n        map.set('Grass', grass);\r\n    }\r\n    function addIce(map) {\r\n        const ice = new Map();\r\n        addHalf(['Fire', 'Water', 'Ice', 'Steel'], ice);\r\n        addDouble(['Grass', 'Ground', 'Flying', 'Dragon'], ice);\r\n        map.set('Ice', ice);\r\n    }\r\n    function addFighting(map) {\r\n        const fighting = new Map();\r\n        addDouble(['Normal', 'Ice', 'Rock', 'Dark', 'Steel'], fighting);\r\n        addHalf(['Poison', 'Flying', 'Psychic', 'Bug', 'Fairy'], fighting);\r\n        fighting.set('Ghost', 0);\r\n        map.set('Fighting', fighting);\r\n    }\r\n    function addPoison(map) {\r\n        const poison = new Map();\r\n        addHalf(['Poison', 'Ground', 'Rock', 'Ghost'], poison);\r\n        addDouble(['Grass', 'Fairy'], poison);\r\n        poison.set('Steel', 0);\r\n        map.set('Poison', poison);\r\n    }\r\n    function addGround(map) {\r\n        const ground = new Map();\r\n        addHalf(['Grass', 'Bug'], ground);\r\n        addDouble(['Fire', 'Electric', 'Poison', 'Rock', 'Steel'], ground);\r\n        ground.set('Flying', 0);\r\n        map.set('Ground', ground);\r\n    }\r\n    function addFlying(map) {\r\n        const flying = new Map();\r\n        addHalf(['Electric', 'Rock', 'Steel'], flying);\r\n        addDouble(['Grass', 'Fighting', 'Bug'], flying);\r\n        map.set('Flying', flying);\r\n    }\r\n    function addPsychic(map) {\r\n        const psychic = new Map();\r\n        addHalf(['Psychic', 'Steel'], psychic);\r\n        addDouble(['Fighting', 'Poison'], psychic);\r\n        psychic.set('Dark', 0);\r\n        map.set('Psychic', psychic);\r\n    }\r\n    function addBug(map) {\r\n        const bug = new Map();\r\n        addHalf(['Fire', 'Fighting', 'Poison', 'Flying', 'Ghost', 'Steel', 'Fairy'], bug);\r\n        addDouble(['Grass', 'Psychic', 'Dark'], bug);\r\n        map.set('Bug', bug);\r\n    }\r\n    function addRock(map) {\r\n        const rock = new Map();\r\n        addDouble(['Fire', 'Ice', 'Flying', 'Bug'], rock);\r\n        addHalf(['Fighting', 'Ground', 'Steel'], rock);\r\n        map.set('Rock', rock);\r\n    }\r\n    function addGhost(map) {\r\n        const ghost = new Map();\r\n        ghost.set('Normal', 0);\r\n        addHalf(['Dark'], ghost);\r\n        addDouble(['Ghost', 'Psychic'], ghost);\r\n        map.set('Ghost', ghost);\r\n    }\r\n    function addDragon(map) {\r\n        const dragon = new Map();\r\n        addDouble(['Dragon'], dragon);\r\n        addHalf(['Steel'], dragon);\r\n        dragon.set('Fairy', 0);\r\n        map.set('Dragon', dragon);\r\n    }\r\n    function addDark(map) {\r\n        const dark = new Map();\r\n        addHalf(['Fighting', 'Dragon', 'Fairy'], dark);\r\n        addDouble(['Psychic', 'Ghost'], dark);\r\n        map.set('Dark', dark);\r\n    }\r\n    function addSteel(map) {\r\n        const steel = new Map();\r\n        addHalf(['Fire', 'Water', 'Electric', 'Steel'], steel);\r\n        addDouble(['Ice', 'Fairy'], steel);\r\n        map.set('Steel', steel);\r\n    }\r\n    function addFairy(map) {\r\n        const fairy = new Map();\r\n        addDouble(['Fighting', 'Dragon', 'Dark'], fairy);\r\n        addHalf(['Fire', 'Poison', 'Steel'], fairy);\r\n        map.set('Fairy', fairy);\r\n    }\r\n    function addAll() {\r\n        const map = new Map();\r\n        addNormal(map);\r\n        addFire(map);\r\n        addWater(map);\r\n        addElectric(map);\r\n        addGrass(map);\r\n        addIce(map);\r\n        addFighting(map);\r\n        addPoison(map);\r\n        addGround(map);\r\n        addFlying(map);\r\n        addPsychic(map);\r\n        addBug(map);\r\n        addRock(map);\r\n        addGhost(map);\r\n        addDragon(map);\r\n        addDark(map);\r\n        addSteel(map);\r\n        addFairy(map);\r\n        return map;\r\n    }\r\n    function addHalf(listOfHalfEffective, map) {\r\n        for (const item of listOfHalfEffective) {\r\n            map.set(item, 0.5);\r\n        }\r\n    }\r\n    function addDouble(listOfDoubleEffective, map) {\r\n        for (const item of listOfDoubleEffective) {\r\n            map.set(item, 2);\r\n        }\r\n    }\r\n\r\n    return addAll();\r\n}","import { url } from \"../utils\";\r\n\r\nexport const addPokemonToStore = pokemon => ({\r\n    type: 'ADD_POKEMON_BULK',\r\n    pokemon\r\n});\r\n\r\nexport const checkCoverage = () => ({\r\n    type: 'CHECK_PARTY'\r\n});\r\n\r\nexport const addPokemonToParty = pokemon => ({\r\n    type: 'ADD_TO_PARTY',\r\n    pokemon,\r\n});\r\n\r\nexport const removePokemonFromParty = index => ({\r\n    type: 'REMOVE_FROM_PARTY',\r\n    index\r\n});\r\n\r\nexport const addPokemonToGrid = pokemon => ({\r\n    type: 'ADD_POKEMON',\r\n    pokemon\r\n});\r\n\r\nexport const removePokemonFromGrid = index => ({\r\n    type: 'REMOVE_POKEMON',\r\n    index\r\n});\r\n\r\nexport const flipTypeFilter = typeToFlip => ({\r\n    type: 'FLIP_TYPE_FILTER',\r\n    typeToFlip\r\n});\r\n\r\nexport const flipGenerationFilter = generationToFlip => ({\r\n    type: 'FLIP_GEN_FILTER',\r\n    generationToFlip\r\n});\r\n\r\nexport const flipGameFilter = gameToFlip => ({\r\n   type: 'FLIP_GAME_FILTER',\r\n   gameToFlip\r\n});\r\n\r\nexport const turnOffAllGames = () => ({\r\n    type: 'SET_ALL_GAMES_OFF'\r\n});\r\n\r\nexport const flipAllTypesTrue = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_TRUE'\r\n});\r\n\r\nexport const flipAllTypesFalse = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_FALSE'\r\n});\r\n\r\nexport const saveParty = (party) => ({\r\n    type: 'SAVE_PARTY',\r\n    party\r\n});\r\n\r\nexport const removeParty = (party) => ({\r\n    type: 'REMOVE_PARTY',\r\n    party\r\n});\r\n\r\nexport function getPokemon() {\r\n    return dispatch => {\r\n        return fetch(`${url}/pokemon`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(addPokemonToStore(json)))\r\n    }\r\n}\r\n","const games = [\r\n    'Red | Blue | Yellow',\r\n    'Gold | Silver | Crystal',\r\n    'Ruby | Sapphire | Emerald',\r\n    'Diamond | Pearl',\r\n    'Platinum',\r\n    'HeartGold | SoulSilver',\r\n    'Black | White',\r\n    'Black 2 | White 2',\r\n    'X | Y',\r\n    'Omega Ruby | Alpha Sapphire',\r\n    'Sun | Moon',\r\n    'Ultra Sun | Ultra Moon'\r\n];\r\n\r\nconst initialState = {};\r\nfor (const type of games) {\r\n    initialState[ type ] = false;\r\n}\r\n\r\nexport function isGameFilter(state) {\r\n    for (const filter in state) {\r\n        if (state[ filter ]) return filter;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst gameFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GAME_FILTER':\r\n            const filter = isGameFilter(state);\r\n            if (filter) {\r\n                for (const game in state) {\r\n                    state[ game ] = false;\r\n                }\r\n                if (filter !== action.gameToFlip) {\r\n                    for (const game in state) {\r\n                        state[ game ] = game === action.gameToFlip;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const game in state) {\r\n                    state[ game ] = game === action.gameToFlip;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'SET_ALL_GAMES_OFF':\r\n            for (const game in state) {\r\n                if (state.hasOwnProperty(game)) {\r\n                    state[ game ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default gameFilter;\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { getPokemon, addPokemonToParty, removePokemonFromGrid } from \"../../actions\";\r\nimport { isGameFilter } from '../../reducers/gameFilter';\r\nimport './Pokemon.css';\r\nimport { isFilter } from '../../utils/'\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party,\r\n    typeFilter: state.typeFilter,\r\n    generationFilter: state.generationFilter,\r\n    gameFilter: state.gameFilter\r\n});\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            props.dispatch(getPokemon());\r\n        }\r\n    }\r\n\r\n    findIndex(number, name) {\r\n        for (let i = 0; i < this.props.pokemon.all.length; i++) {\r\n            if (this.props.pokemon.all[ i ].pokemonNumber === number && name === this.props.pokemon.all[ i ].name) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(pokemon) {\r\n        if (this.props.pokemon.party.length !== 6) {\r\n            this.props.dispatch(addPokemonToParty({\r\n                name: pokemon.name,\r\n                types: pokemon.types,\r\n                pokemonNumber: pokemon.pokemonNumber,\r\n                region: pokemon.region,\r\n                generation: pokemon.generation\r\n            }));\r\n\r\n            this.props.dispatch(removePokemonFromGrid(this.findIndex(pokemon.pokemonNumber, pokemon.name)));\r\n        }\r\n    }\r\n\r\n    gameFilterToAcronym(gameFilter) {\r\n        switch (gameFilter) {\r\n            case 'Red | Blue | Yellow':\r\n                return 'RBY';\r\n            case 'Gold | Silver | Crystal':\r\n                return 'GSC';\r\n            case 'Ruby | Sapphire | Emerald':\r\n                return 'RSE';\r\n            case 'Diamond | Pearl':\r\n                return 'DP';\r\n            case 'Platinum':\r\n                return 'PT';\r\n            case 'HeartGold | SoulSilver':\r\n                return 'HGSS';\r\n            case 'Black | White':\r\n                return 'BW';\r\n            case 'Black 2 | White 2':\r\n                return 'BW2';\r\n            case 'X | Y':\r\n                return 'XY';\r\n            case 'Omega Ruby | Alpha Sapphire':\r\n                return 'ORAS';\r\n            case 'Sun | Moon':\r\n                return 'SM';\r\n            case 'Ultra Sun | Ultra Moon':\r\n                return 'USUM';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    getArrayFromMap(map) {\r\n        let result = [];\r\n        for (const i in map) {\r\n            if (map[ i ]) result.push(this.gameFilterToAcronym(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    filter() {\r\n\r\n        if (this.props && this.props.pokemon.all) {\r\n            const toFilter = this.props.pokemon.checkingParty ?\r\n                this.props.pokemon.lackingCoverage : this.props.pokemon.all;\r\n            return toFilter.filter(p => {\r\n                if (isGameFilter(this.props.gameFilter)) {\r\n                    if (!p.games.includes(this.getArrayFromMap(this.props.gameFilter)[ 0 ])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const generation in this.props.generationFilter) {\r\n                    if (this.props.generationFilter.hasOwnProperty(generation) && this.props.generationFilter[ generation ] === false\r\n                        && (p.hasOwnProperty('generation') && p.generation === Number.parseInt(generation))) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const type in this.props.typeFilter) {\r\n                    if (this.props.typeFilter.hasOwnProperty(type) && this.props.typeFilter[ type ] === true &&\r\n                        (p.types[ 0 ] === type || p.types[ 1 ] === type)) return true;\r\n                }\r\n                return false;\r\n            }).sort((a, b) => {\r\n                let filter = this.gameFilterToAcronym(isGameFilter(this.props.gameFilter));\r\n                if (filter && a.locations.hasOwnProperty(filter) && b.locations.hasOwnProperty(filter)) {\r\n                    return a.locations[ filter ] - b.locations[ filter ];\r\n                } else if (a.hasOwnProperty('pokemonNumber') && b.hasOwnProperty('pokemonNumber')) {\r\n                    if (a.pokemonNumber === b.pokemonNumber) { return a.generation - b.generation; }\r\n                    return a.pokemonNumber - b.pokemonNumber;\r\n                } else return a - b;\r\n            });\r\n        } else return null;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.filter();\r\n        if (pokemon.length === 0 && !isFilter(this.props)) {\r\n            return <div className='still-loading'>\r\n                <div className='buffer'>\r\n                    <img src='./pokeball.png' alt='pokeball' className='pokeball img-fluid'/>\r\n                </div>\r\n            </div>\r\n        }\r\n        if (pokemon) {\r\n            return (\r\n                <div className='col-md-8 text-center'>\r\n                    {\r\n                        pokemon.map((poke, index) => {\r\n                            let className = poke.types.length === 1 ? `circle ${ poke.types[ 0 ] }` : `circle ${ poke.types[ 1 ] }-main ${ poke.types[ 0 ] }-secondary`;\r\n                            const image = <img className={ className }\r\n                                               src={ `data:image/png;base64, ${ poke.image }` }\r\n                                               alt={ poke.name } width={ '64px' } height={ '64px' }\r\n                                               onClick={ () => this.onClick(poke, index) }/>;\r\n                            return (<span key={ poke.name } title={ poke.name }>{ image }</span>);\r\n                        }) }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","export default [\r\n    'Normal',\r\n    'Fire',\r\n    'Water',\r\n    'Electric',\r\n    'Grass',\r\n    'Ice',\r\n    'Fighting',\r\n    'Poison',\r\n    'Ground',\r\n    'Flying',\r\n    'Psychic',\r\n    'Bug',\r\n    'Rock',\r\n    'Ghost',\r\n    'Dragon',\r\n    'Dark',\r\n    'Steel',\r\n    'Fairy'\r\n];\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport './Pokemon.css';\r\nimport types from '../../utils/types';\r\nimport { isStrongAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass LeftSideBar extends React.Component {\r\n    findStrengthCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isStrongAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='col-md-2 strengths text-right'>\r\n                <div className='text-right'>Strengths:</div>\r\n                <table style={{'width': '100px', 'marginLeft': '65%', 'textAlign': 'left'}}>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>{ val }</td>\r\n                        <td>{ this.findStrengthCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport './Pokemon.css';\r\nimport types from '../../utils/types';\r\nimport { isWeakAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass RightSideBar extends React.Component {\r\n    findWeaknessCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isWeakAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='col-md-2 weaknesses text-left'>\r\n                <span className='text-center'>Weaknesses:</span>\r\n                <table style={{'width': '100px'}}>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>{ val }</td>\r\n                        <td>{ this.findWeaknessCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RightSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Pokemon from './Pokemon';\r\nimport LeftSideBar from \"./LeftSideBar\";\r\nimport RightSideBar from \"./RightSideBar\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div style={{'display': 'flex'}}>\r\n            <LeftSideBar />\r\n            <Pokemon/>\r\n            <RightSideBar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Body);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Body/Pokemon.css';\r\nimport { addPokemonToGrid, removePokemonFromParty, saveParty } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass Party extends React.Component {\r\n    static setUp(pokemon) {\r\n        let result = [];\r\n        for (const poke of pokemon) {\r\n            result.push(poke);\r\n        }\r\n        while (result.length < 6) {\r\n            result.push('empty');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onClick(pokemon, index) {\r\n        this.props.dispatch(removePokemonFromParty(index));\r\n        this.props.dispatch(addPokemonToGrid(pokemon));\r\n    }\r\n\r\n    saveParty() {\r\n        const newParty = [];\r\n        for (const partyMember of this.props.pokemon.party) {\r\n            newParty.push({...partyMember});\r\n        }\r\n        this.props.dispatch(saveParty(newParty));\r\n    }\r\n\r\n    render() {\r\n        const party = Party.setUp(this.props.pokemon.party);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            return null;\r\n        }\r\n        const div = <div>&nbsp;</div>;\r\n        return (\r\n            <div className='text-center'>\r\n                <span className='partyMembers rounded'>\r\n                { party.map((value, index) => {\r\n                    if (value === 'empty') {\r\n                        return <span style={ { 'display': 'inline-block' } } key={ index }><span\r\n                            className='empty'/>{ div }{ div }<br/></span>\r\n                    }\r\n                    let className;\r\n                    let types;\r\n                    if (value.types.length === 1) {\r\n                        className = `circle ${ value.types[ 0 ] }`;\r\n                        types = (<span className={ 'type ' + value.types[ 0 ] }>\r\n                            { value.types[ 0 ] }\r\n                        </span>);\r\n                    } else {\r\n                        className = `circle ${ value.types[ 1 ] }-main ${ value.types[ 0 ] }-secondary`;\r\n                        types = (<span><span className={ 'type ' + value.types[ 1 ] }>\r\n                                { value.types[ 1 ] }\r\n                            </span><span className={ 'type ' + value.types[ 0 ] }>\r\n                            { value.types[ 0 ] }\r\n                        </span></span>);\r\n                    }\r\n                    return <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                        <img className={ className } src={ `data:image/png;base64, ${ value.image }` }\r\n                             alt={ value.name } width={ '96px' } height={ '96px' }\r\n                             onClick={ () => this.onClick(value, index) }/>\r\n                        <div className='name'>\r\n                            { value.name }\r\n                        </div>\r\n                        <div>\r\n                            { types }\r\n                        </div>\r\n                        <br/>\r\n                    </span>\r\n                }) }\r\n                    <img src=\"add_team.svg\" alt='add team' onClick={() => this.saveParty() }\r\n                         className=\"addPokemon\" title=\"Add Pokemon To Party\"/>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Party);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipAllTypesFalse, flipAllTypesTrue, flipTypeFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    selected: state.typeFilter\r\n});\r\n\r\nclass TypeFilter extends React.Component {\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked) && this.props.selected[checked] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 18) return 'All Types Selected';\r\n        if (count === 0) return 'No Types Selected';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.selected) {\r\n            if (checkBox === checkedName && this.props.selected[checkedName] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipTypeFilter(type));\r\n    }\r\n\r\n    toggleAll() {\r\n        if (this.count() === 'All Types Selected') {\r\n            this.props.dispatch(flipAllTypesFalse());\r\n        } else {\r\n            this.props.dispatch(flipAllTypesTrue());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col'>\r\n                    <div className=\"dropdown\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {<span>{this.count()}</span>}\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            <div key={ 'all' } className='ml-4'>\r\n                                <label className='checkbox'>\r\n                                    <button onClick={() => this.toggleAll()} >Select all</button>\r\n                                </label>\r\n                            </div>\r\n                            {this.getNames().map(val =>\r\n                                <div key={ val } className='ml-4'>\r\n                                    <label className='checkbox'>\r\n                                        <input type='checkbox' value={val} onChange={() => this.onChange(val)} checked={this.check(val)}/>\r\n                                        { val }\r\n                                    </label>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TypeFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGenerationFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked) && this.props.generations[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 7) return 'All Generations';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static addRegionalName(gen) {\r\n        switch (Number.parseInt(gen)) {\r\n            case 1:\r\n                return `${gen}: Kanto`;\r\n            case 2:\r\n                return `${gen}: Johto`;\r\n            case 3:\r\n                return `${gen}: Hoenn`;\r\n            case 4:\r\n                return `${gen}: Sinnoh`;\r\n            case 5:\r\n                return `${gen}: Unova`;\r\n            case 6:\r\n                return `${gen}: Kalos`;\r\n            case 7:\r\n                return `${gen}: Alola`;\r\n            default:\r\n                return gen;\r\n        }\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.generations) {\r\n            if (checkBox === checkedName && this.props.generations[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGenerationFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col'>\r\n                    <div className=\"dropdown\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            { <span>{ this.count() }</span> }\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            { this.getNames().map(val =>\r\n                                <div key={ val } className='ml-4'>\r\n                                    <label className='checkbox'>\r\n                                        <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                               defaultChecked={ this.check(val) }/>\r\n                                        { LeftHeader.addRegionalName(val) }\r\n                                    </label>\r\n                                </div>) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGameFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    games: state.gameFilter\r\n});\r\n\r\nclass GameFilter extends React.Component {\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const game in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(game) && this.props.games[ game ] === true) {\r\n                return game;\r\n            }\r\n        }\r\n        if (count === 0) return 'All Games';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.games) {\r\n            if (checkedName === checkBox && this.props.games[ checkBox ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGameFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col'>\r\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        { <span>{this.count()}</span> }\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" style={ { 'right': 0, 'left': 0 } }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val } className='ml-4'>\r\n                                <label>\r\n                                <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                    checked={this.check(val)} />\r\n                                { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { checkCoverage } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n});\r\n\r\nclass CoverageFilter extends React.Component {\r\n\r\n    handleClick() {\r\n        this.props.dispatch(checkCoverage());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='col'>\r\n                <button className='btn btn-secondary' onClick={ () => this.handleClick() }>Check Coverage</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CoverageFilter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TypeFilter from './TypeFilter';\r\nimport GenerationFilter from './GenerationFilter';\r\nimport GameFilter from './GameFilter';\r\nimport CoverageFilter from './CoverageFilter';\r\nimport { isFilter } from '../../../utils';\r\n\r\nconst mapStateToProps = state => ({\r\n    all: state.pokemon,\r\n    party: state.party,\r\n    selected: state.typeFilter,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        if (!isFilter(this.props) && !this.props.all.all.length && !this.props.all.party.length) {\r\n            return <span/>;\r\n        }\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n                        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse row\" id=\"navbarCollapse\">\r\n                    <TypeFilter />\r\n                    <CoverageFilter />\r\n                    <GameFilter />\r\n                    <GenerationFilter />\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Party from \"./Party\";\r\nimport Navbar from \"./navbar\";\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <span>\r\n            <Navbar/>\r\n            <div className='party'>\r\n                <Party/>\r\n            </div>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default connect()(Header);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon.all,\r\n});\r\n\r\nconst Footer = (props) => {\r\n    return props.pokemon.length > 0 ? (<footer className=\"bg-dark text-white text-center mt-5\">\r\n        <div className=\"row\" style={ { 'marginLeft': '0', 'marginRight': '0' } }>\r\n            <span className=\"col\">&copy; of bgoff1</span>\r\n            <span className=\"col\">Pokémon info and images fetched from PokeAPI</span>\r\n            <span className=\"col\">Pokémon is &copy; of Nintendo, 1995-2019</span>\r\n        </div>\r\n    </footer>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Body from './Body';\r\nimport Header from \"./Header\";\r\nimport Footer from './Body/Footer';\r\nconst Page = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Body/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Page);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { removeParty } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    savedParties: state.savedParties\r\n});\r\n\r\nclass Parties extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        for (const party of this.props.savedParties.parties) {\r\n            while (party.length < 6) {\r\n                party.push({ name: 'empty' });\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(partyIndex) {\r\n        this.props.dispatch(removeParty(this.props.savedParties.parties[partyIndex]));\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this && this.props && this.props.savedParties) {\r\n            const div = <div>&nbsp;</div>;\r\n            const parties = this.props.savedParties.parties;\r\n            return (\r\n                <div>\r\n                    { parties.map((party, partyIndex) => {\r\n                            return <div key={partyIndex}>{party.map((value, index) => {\r\n                                if (value.name === 'empty') {\r\n                                    return <span style={ { 'display': 'inline-block' } } key={ index } onClick={() => this.onClick(partyIndex)}><span\r\n                                        className='empty'/>{ div }{ div }<br/></span>\r\n                                }\r\n                                let className;\r\n                                let types;\r\n                                if (value.types.length === 1) {\r\n                                    className = `circle ${ value.types[ 0 ] }`;\r\n                                    types = (<span className={ 'type ' + value.types[ 0 ] }>\r\n                                                    { value.types[ 0 ] }\r\n                                                </span>);\r\n                                } else {\r\n                                    className = `circle ${ value.types[ 1 ] }-main ${ value.types[ 0 ] }-secondary`;\r\n                                    types = (<span><span className={ 'type ' + value.types[ 1 ] }>\r\n                                                    { value.types[ 1 ] }\r\n                                                    </span><span className={ 'type ' + value.types[ 0 ] }>\r\n                                                    { value.types[ 0 ] }\r\n                                                </span></span>);\r\n                                }\r\n                                return (\r\n                                    <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                                            <img className={ className }\r\n                                                 src={ `data:image/png;base64, ${ value.image }` }\r\n                                                 alt={ value.name } width={ '96px' } height={ '96px' }\r\n                                                 onClick={ () => this.onClick(partyIndex) }/>\r\n                                            <div className='name'>{ value.name }</div>\r\n                                            <div>{ types }</div><br/>\r\n                                        </span>\r\n                                )\r\n                            })}</div>\r\n                        }\r\n                    ) }\r\n                </div>\r\n            );\r\n        }\r\n        return <span/>\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Parties);\r\n","import types from \"../utils/types\";\r\n\r\nconst initialState = {};\r\nfor (const type of types) {\r\n    initialState[type] = true;\r\n}\r\nconst typeFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_TYPE_FILTER':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type) && type === action.typeToFlip) {\r\n                    state[type] = !state[type];\r\n                    break;\r\n                }\r\n            }\r\n            return {...state};\r\n        case 'FLIP_ALL_TYPE_FILTER_TRUE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[type] = true;\r\n                }\r\n            }\r\n            return {...state};\r\n        case 'FLIP_ALL_TYPE_FILTER_FALSE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[type] = false;\r\n                }\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default typeFilter","const generations = [1,2,3,4,5,6,7];\r\n\r\nconst initialState = {};\r\nfor (const type of generations) {\r\n    initialState[type] = true;\r\n}\r\nconst generationFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GEN_FILTER':\r\n            for (const generation in state) {\r\n                if (state.hasOwnProperty(generation) && generation === action.generationToFlip) {\r\n                    state[generation] = !state[generation];\r\n                    break;\r\n                }\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default generationFilter;\r\n","import { getPartyTypes, isAPartyMemberStrong } from '../utils/';\r\nconst initialState = {\r\n    all: [],\r\n    party: [],\r\n    checkingParty: false,\r\n    lackingCoverage: []\r\n};\r\nconst pokemon = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'ADD_POKEMON_BULK':\r\n                if (action.pokemon) {\r\n                    const all = action.pokemon;\r\n                    return {\r\n                        ...state,\r\n                        all\r\n                    };\r\n                } else return { ...state };\r\n            case 'ADD_TO_PARTY':\r\n                if (action.pokemon) {\r\n                    const party = state.party;\r\n                    for (const poke of state.all) {\r\n                        if (poke.name === action.pokemon.name) {\r\n                            party.push(poke);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return { ...state, party };\r\n                } else return { ...state };\r\n            case 'REMOVE_FROM_PARTY':\r\n                if (action.index || action.index === 0) {\r\n                    const party = state.party;\r\n                    party.splice(action.index, 1);\r\n                    return { ...state, party };\r\n                }\r\n                return { ...state };\r\n            case 'ADD_POKEMON':\r\n                if (action.pokemon) {\r\n                    const all = state.all;\r\n                    let index = 0;\r\n                    if (all.find(x => x.name === action.pokemon.name)) {\r\n                        return { ...state };\r\n                    }\r\n                    for (const poke of all) {\r\n                        if (poke.number > index && poke.number < action.pokemon.number) {\r\n                            index = state.all.indexOf(poke) + 1;\r\n                            if (index === action.pokemon.number - 1) break;\r\n                        }\r\n                    }\r\n                    all.splice(index, 0, action.pokemon);\r\n                    return { ...state, all };\r\n                } else return { ...state };\r\n            case 'REMOVE_POKEMON':\r\n                if (action.index || action.index === 0) {\r\n                    let all = state.all;\r\n                    all.splice(action.index, 1);\r\n                    return { ...state, all };\r\n                }\r\n                return { ...state };\r\n            case 'CHECK_PARTY':\r\n                if (state.checkingParty) {\r\n                    state.checkingParty = false;\r\n                    state.lackingCoverage = [];\r\n                    return { ...state };\r\n                }\r\n                if (state.party.length === 0) { return { ...state }; }\r\n                state.checkingParty = true;\r\n                let partyTypes = getPartyTypes(state.party);\r\n                for (const pokemon of state.all) {\r\n                    if (!isAPartyMemberStrong(partyTypes, pokemon)) {\r\n                        state.lackingCoverage.push(pokemon);\r\n                    }\r\n                }\r\n                return {...state };\r\n            default:\r\n                return { ...state };\r\n        }\r\n    }\r\n;\r\n\r\nexport default pokemon;\r\n","const initialState = {\r\n    parties: []\r\n};\r\nconst savedParties = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_PARTY':\r\n            if (action.party) {\r\n                console.log('state', state.parties);\r\n                console.log('action', action.party);\r\n                const parties = state.parties;\r\n                parties.push(action.party);\r\n                return {...state, parties};\r\n            }\r\n            return { ...state };\r\n        case 'REMOVE_PARTY':\r\n            if (action.party) {\r\n                const parties = state.parties.filter(item => item !== action.party);\r\n                return {...state, parties };\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default savedParties;\r\n","import { combineReducers } from 'redux';\r\nimport typeFilter from './typeFilter';\r\nimport generationFilter from './generationFilter';\r\nimport gameFilter from './gameFilter';\r\nimport pokemon from \"./pokemon\";\r\nimport savedParties from './savedParties';\r\n\r\nexport default combineReducers({\r\n    typeFilter,\r\n    generationFilter,\r\n    gameFilter,\r\n    pokemon,\r\n    savedParties\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport reducer from './reducers/';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nexport default () => {\r\n    const persistConfig = {\r\n        key: 'root',\r\n        storage,\r\n        stateReconciler: hardSet\r\n    };\r\n\r\n    const persistedReducer = persistReducer(persistConfig, reducer);\r\n    // noinspection JSUnresolvedVariable\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(persistedReducer, composeEnhancers(\r\n        applyMiddleware(thunkMiddleware)\r\n    ));\r\n    const persistor = persistStore(store);\r\n    return { store, persistor };\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Page from \"./components/Page\";\nimport Parties from './components/Parties';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createStore from './createStore';\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\nconst { store, persistor } = createStore();\n\n\nconst App = () => (\n    <Provider store={ store }>\n        <PersistGate loading={ null } persistor={ persistor }>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path=\"/\" component={ Page }/>\n                    <Route path=\"/parties\" component={ Parties }/>\n                    <Redirect to=\"/\"/>\n                </Switch>\n            </Router>\n        </PersistGate>\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}