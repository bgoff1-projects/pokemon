{"version":3,"sources":["utils/index.js","utils/map.js","actions/index.jsx","reducers/gameFilter.jsx","components/Body/Pokemon.jsx","utils/types.js","components/Body/LeftSideBar.jsx","components/Body/RightSideBar.jsx","components/Body/index.jsx","components/Header/Party.jsx","components/Header/LeftHeader.jsx","components/Header/RightHeader.jsx","components/Header/MiddleHeader.jsx","components/Header/navbar.jsx","components/Header/index.jsx","components/Page.jsx","reducers/typeFilter.jsx","reducers/generationFilter.jsx","reducers/pokemon.jsx","reducers/index.jsx","createStore.js","App.jsx","serviceWorker.js","index.js"],"names":["url","map","addHalf","listOfHalfEffective","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","set","err","return","addDouble","listOfDoubleEffective","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Map","normal","addNormal","fire","addFire","water","addWater","electric","addElectric","grass","addGrass","ice","addIce","fighting","addFighting","poison","addPoison","ground","addGround","flying","addFlying","psychic","addPsychic","bug","addBug","rock","addRock","ghost","addGhost","dragon","addDragon","dark","addDark","steel","addSteel","fairy","addFairy","addAll","createMap","isStrongAgainst","pokemon","type","types","pokemonType","get","has","isWeakAgainst","length","type1","isFilter","props","filter","generationFilter","gameFilter","typeFilter","addPokemonToStore","initialState","_i","_games","isGameFilter","state","arguments","action","game","gameToFlip","Object","objectSpread","hasOwnProperty","View","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","all","dispatch","fetch","concat","then","response","json","number","name","i","pokemonNumber","party","addPokemonToParty","region","generation","index","findIndex","result","push","gameFilterToAcronym","_this2","p","games","includes","getArrayFromMap","Number","parseInt","sort","a","b","locations","_this3","react_default","createElement","className","poke","image","src","alt","width","height","onClick","key","title","React","Component","connect","LeftSideBar","count","style","marginLeft","textAlign","val","findStrengthCount","RightSideBar","findWeaknessCount","display","Body_LeftSideBar","Body_Pokemon","Body_RightSideBar","Party","removePokemonFromParty","addPokemonToGrid","setUp","div","LeftHeader","checked","selected","checkedName","checkBox","typeToFlip","data-toggle","aria-haspopup","aria-expanded","toggleAll","getNames","onChange","check","generations","generationToFlip","defaultChecked","addRegionalName","gen","MiddleHeader","right","left","Navbar","data-target","aria-controls","aria-label","id","Header_LeftHeader","margin-right","Header_MiddleHeader","RightHeader","navbar","Header_Party","components_Header","components_Body","typeFilter_step","typeFilter_iterator","typeFilter_iteratorNormalCompletion","generationFilter_i","_generations","splice","find","x","indexOf","combineReducers","persistConfig","storage","stateReconciler","hardSet","persistedReducer","persistReducer","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","App","es","integration_react","loading","components_Page","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bad8026c.chunk.js","sourcesContent":["import { createMap } from './map';\r\n\r\nconst env = 'PROD';\r\n\r\nlet URL = '';\r\nif (env === 'DEV') {\r\n    URL = 'http://localhost:8000';\r\n} else {\r\n    URL = 'https://pure-caverns-33114.herokuapp.com';\r\n}\r\nexport const url = URL;\r\n\r\nconst map = createMap();\r\n\r\nexport function isStrongAgainst(pokemon, type) {\r\n    for (const pokemonType of pokemon.types) {\r\n        if (map.get(pokemonType).has(type) && map.get(pokemonType).get(type) === 2) return true;\r\n    }\r\n}\r\n\r\nexport function isWeakAgainst(pokemon, type) {\r\n    if (pokemon.types.length === 1) {\r\n        if (map.get(type).has(pokemon.types[ 0 ]) && map.get(type).get(pokemon.types[ 0 ]) === 2) {\r\n            return true;\r\n        }\r\n    } else {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const type1 = map.get(type).get(pokemon.types[0]);\r\n            if (map.get(type).has(pokemon.types[1])) {\r\n                const type2 = map.get(type).get(pokemon.types[1]);\r\n                if (type1 * type2 >= 2) return true;\r\n            } else if (type1 === 2) return true;\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isFilter(props) {\r\n    for (const filter in props.generationFilter) {\r\n        if (!props.generationFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.gameFilter) {\r\n        if (props.gameFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.typeFilter) {\r\n        if (!props.typeFilter[filter]) return true;\r\n    }\r\n    return false;\r\n}\r\n","export function createMap() {\r\n    function addNormal(map) {\r\n        const normal = new Map();\r\n        addHalf(['Rock', 'Steel'], normal);\r\n        normal.set('Ghost', 0);\r\n        map.set('Normal', normal);\r\n    }\r\n    function addFire(map) {\r\n        const fire = new Map();\r\n        addHalf(['Fire', 'Water', 'Rock', 'Dragon'], fire);\r\n        addDouble(['Grass', 'Ice', 'Bug', 'Steel'], fire);\r\n        map.set('Fire', fire);\r\n    }\r\n    function addWater(map) {\r\n        const water = new Map();\r\n        addDouble(['Fire', 'Ground', 'Rock'], water);\r\n        addHalf(['Water', 'Grass', 'Dragon'], water);\r\n        map.set('Water', water);\r\n    }\r\n    function addElectric(map) {\r\n        const electric = new Map();\r\n        addDouble(['Water', 'Flying'], electric);\r\n        addHalf(['Electric', 'Grass', 'Dragon'], electric);\r\n        electric.set('Ground', 0);\r\n        map.set('Electric', electric);\r\n    }\r\n    function addGrass(map) {\r\n        const grass = new Map();\r\n        addHalf(['Fire', 'Grass', 'Poison', 'Flying', 'Bug', 'Dragon', 'Steel'], grass);\r\n        addDouble(['Water', 'Ground', 'Rock'], grass);\r\n        map.set('Grass', grass);\r\n    }\r\n    function addIce(map) {\r\n        const ice = new Map();\r\n        addHalf(['Fire', 'Water', 'Ice', 'Steel'], ice);\r\n        addDouble(['Grass', 'Ground', 'Flying', 'Dragon'], ice);\r\n        map.set('Ice', ice);\r\n    }\r\n    function addFighting(map) {\r\n        const fighting = new Map();\r\n        addDouble(['Normal', 'Ice', 'Rock', 'Dark', 'Steel'], fighting);\r\n        addHalf(['Poison', 'Flying', 'Psychic', 'Bug', 'Fairy'], fighting);\r\n        fighting.set('Ghost', 0);\r\n        map.set('Fighting', fighting);\r\n    }\r\n    function addPoison(map) {\r\n        const poison = new Map();\r\n        addHalf(['Poison', 'Ground', 'Rock', 'Ghost'], poison);\r\n        addDouble(['Grass', 'Fairy'], poison);\r\n        poison.set('Steel', 0);\r\n        map.set('Poison', poison);\r\n    }\r\n    function addGround(map) {\r\n        const ground = new Map();\r\n        addHalf(['Grass', 'Bug'], ground);\r\n        addDouble(['Fire', 'Electric', 'Poison', 'Rock', 'Steel'], ground);\r\n        ground.set('Flying', 0);\r\n        map.set('Ground', ground);\r\n    }\r\n    function addFlying(map) {\r\n        const flying = new Map();\r\n        addHalf(['Electric', 'Rock', 'Steel'], flying);\r\n        addDouble(['Grass', 'Fighting', 'Bug'], flying);\r\n        map.set('Flying', flying);\r\n    }\r\n    function addPsychic(map) {\r\n        const psychic = new Map();\r\n        addHalf(['Psychic', 'Steel'], psychic);\r\n        addDouble(['Fighting', 'Poison'], psychic);\r\n        psychic.set('Dark', 0);\r\n        map.set('Psychic', psychic);\r\n    }\r\n    function addBug(map) {\r\n        const bug = new Map();\r\n        addHalf(['Fire', 'Fighting', 'Poison', 'Flying', 'Ghost', 'Steel', 'Fairy'], bug);\r\n        addDouble(['Grass', 'Psychic', 'Dark'], bug);\r\n        map.set('Bug', bug);\r\n    }\r\n    function addRock(map) {\r\n        const rock = new Map();\r\n        addDouble(['Fire', 'Ice', 'Flying', 'Bug'], rock);\r\n        addHalf(['Fighting', 'Ground', 'Steel'], rock);\r\n        map.set('Rock', rock);\r\n    }\r\n    function addGhost(map) {\r\n        const ghost = new Map();\r\n        ghost.set('Normal', 0);\r\n        addHalf(['Dark'], ghost);\r\n        addDouble(['Ghost', 'Psychic'], ghost);\r\n        map.set('Ghost', ghost);\r\n    }\r\n    function addDragon(map) {\r\n        const dragon = new Map();\r\n        addDouble(['Dragon'], dragon);\r\n        addHalf(['Steel'], dragon);\r\n        dragon.set('Fairy', 0);\r\n        map.set('Dragon', dragon);\r\n    }\r\n    function addDark(map) {\r\n        const dark = new Map();\r\n        addHalf(['Fighting', 'Dragon', 'Fairy'], dark);\r\n        addDouble(['Psychic', 'Ghost'], dark);\r\n        map.set('Dark', dark);\r\n    }\r\n    function addSteel(map) {\r\n        const steel = new Map();\r\n        addHalf(['Fire', 'Water', 'Electric', 'Steel'], steel);\r\n        addDouble(['Ice', 'Fairy'], steel);\r\n        map.set('Steel', steel);\r\n    }\r\n    function addFairy(map) {\r\n        const fairy = new Map();\r\n        addDouble(['Fighting', 'Dragon', 'Dark'], fairy);\r\n        addHalf(['Fire', 'Poison', 'Steel'], fairy);\r\n        map.set('Fairy', fairy);\r\n    }\r\n    function addAll() {\r\n        const map = new Map();\r\n        addNormal(map);\r\n        addFire(map);\r\n        addWater(map);\r\n        addElectric(map);\r\n        addGrass(map);\r\n        addIce(map);\r\n        addFighting(map);\r\n        addPoison(map);\r\n        addGround(map);\r\n        addFlying(map);\r\n        addPsychic(map);\r\n        addBug(map);\r\n        addRock(map);\r\n        addGhost(map);\r\n        addDragon(map);\r\n        addDark(map);\r\n        addSteel(map);\r\n        addFairy(map);\r\n        return map;\r\n    }\r\n    function addHalf(listOfHalfEffective, map) {\r\n        for (const item of listOfHalfEffective) {\r\n            map.set(item, 0.5);\r\n        }\r\n    }\r\n    function addDouble(listOfDoubleEffective, map) {\r\n        for (const item of listOfDoubleEffective) {\r\n            map.set(item, 2);\r\n        }\r\n    }\r\n\r\n    return addAll();\r\n}","import { url } from \"../utils\";\r\n\r\nexport const addPokemonToStore = pokemon => ({\r\n    type: 'ADD_POKEMON_BULK',\r\n    pokemon\r\n});\r\n\r\nexport const addPokemonToParty = pokemon => ({\r\n    type: 'ADD_TO_PARTY',\r\n    pokemon,\r\n});\r\n\r\nexport const removePokemonFromParty = index => ({\r\n    type: 'REMOVE_FROM_PARTY',\r\n    index\r\n});\r\n\r\nexport const addPokemonToGrid = pokemon => ({\r\n    type: 'ADD_POKEMON',\r\n    pokemon\r\n});\r\n\r\nexport const removePokemonFromGrid = index => ({\r\n    type: 'REMOVE_POKEMON',\r\n    index\r\n});\r\n\r\nexport const flipTypeFilter = typeToFlip => ({\r\n    type: 'FLIP_TYPE_FILTER',\r\n    typeToFlip\r\n});\r\n\r\nexport const flipGenerationFilter = generationToFlip => ({\r\n    type: 'FLIP_GEN_FILTER',\r\n    generationToFlip\r\n});\r\n\r\nexport const flipGameFilter = gameToFlip => ({\r\n   type: 'FLIP_GAME_FILTER',\r\n   gameToFlip\r\n});\r\n\r\nexport const turnOffAllGames = () => ({\r\n    type: 'SET_ALL_GAMES_OFF'\r\n});\r\n\r\nexport const flipAllTypesTrue = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_TRUE'\r\n});\r\n\r\nexport const flipAllTypesFalse = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_FALSE'\r\n});\r\n\r\nexport function getPokemon() {\r\n    return dispatch => {\r\n        return fetch(`${url}/pokemon`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(addPokemonToStore(json)))\r\n    }\r\n}\r\n","const games = [\r\n    'Red | Blue | Yellow',\r\n    'Gold | Silver | Crystal',\r\n    'Ruby | Sapphire | Emerald',\r\n    'Diamond | Pearl',\r\n    'Platinum',\r\n    'HeartGold | SoulSilver',\r\n    'Black | White',\r\n    'Black 2 | White 2',\r\n    'X | Y',\r\n    'Omega Ruby | Alpha Sapphire',\r\n    'Sun | Moon',\r\n    'Ultra Sun | Ultra Moon'\r\n];\r\n\r\nconst initialState = {};\r\nfor (const type of games) {\r\n    initialState[ type ] = false;\r\n}\r\n\r\nexport function isGameFilter(state) {\r\n    for (const filter in state) {\r\n        if (state[ filter ]) return filter;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst gameFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GAME_FILTER':\r\n            const filter = isGameFilter(state);\r\n            if (filter) {\r\n                for (const game in state) {\r\n                    state[ game ] = false;\r\n                }\r\n                if (filter !== action.gameToFlip) {\r\n                    for (const game in state) {\r\n                        state[ game ] = game === action.gameToFlip;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const game in state) {\r\n                    state[ game ] = game === action.gameToFlip;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'SET_ALL_GAMES_OFF':\r\n            for (const game in state) {\r\n                if (state.hasOwnProperty(game)) {\r\n                    state[ game ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default gameFilter;\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { getPokemon, addPokemonToParty, removePokemonFromGrid } from \"../../actions/index\";\r\nimport { isGameFilter } from '../../reducers/gameFilter';\r\nimport './Pokemon.css';\r\nimport { isFilter } from '../../utils/'\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party,\r\n    typeFilter: state.typeFilter,\r\n    generationFilter: state.generationFilter,\r\n    gameFilter: state.gameFilter\r\n});\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            props.dispatch(getPokemon());\r\n        }\r\n    }\r\n\r\n    findIndex(number, name) {\r\n        for (let i = 0; i < this.props.pokemon.all.length; i++) {\r\n            if (this.props.pokemon.all[ i ].pokemonNumber === number && name === this.props.pokemon.all[ i ].name) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(pokemon) {\r\n        if (this.props.pokemon.party.length !== 6) {\r\n            this.props.dispatch(addPokemonToParty({\r\n                name: pokemon.name,\r\n                types: pokemon.types,\r\n                pokemonNumber: pokemon.pokemonNumber,\r\n                region: pokemon.region,\r\n                generation: pokemon.generation\r\n            }));\r\n\r\n            this.props.dispatch(removePokemonFromGrid(this.findIndex(pokemon.pokemonNumber, pokemon.name)));\r\n        }\r\n    }\r\n\r\n    gameFilterToAcronym(gameFilter) {\r\n        switch (gameFilter) {\r\n            case 'Red | Blue | Yellow':\r\n                return 'RBY';\r\n            case 'Gold | Silver | Crystal':\r\n                return 'GSC';\r\n            case 'Ruby | Sapphire | Emerald':\r\n                return 'RSE';\r\n            case 'Diamond | Pearl':\r\n                return 'DP';\r\n            case 'Platinum':\r\n                return 'PT';\r\n            case 'HeartGold | SoulSilver':\r\n                return 'HGSS';\r\n            case 'Black | White':\r\n                return 'BW';\r\n            case 'Black 2 | White 2':\r\n                return 'BW2';\r\n            case 'X | Y':\r\n                return 'XY';\r\n            case 'Omega Ruby | Alpha Sapphire':\r\n                return 'ORAS';\r\n            case 'Sun | Moon':\r\n                return 'SM';\r\n            case 'Ultra Sun | Ultra Moon':\r\n                return 'USUM';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    getArrayFromMap(map) {\r\n        let result = [];\r\n        for (const i in map) {\r\n            if (map[ i ]) result.push(this.gameFilterToAcronym(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    filter() {\r\n        if (this.props && this.props.pokemon.all) {\r\n            return this.props.pokemon.all.filter(p => {\r\n                if (isGameFilter(this.props.gameFilter)) {\r\n                    if (!p.games.includes(this.getArrayFromMap(this.props.gameFilter)[ 0 ])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const generation in this.props.generationFilter) {\r\n                    if (this.props.generationFilter.hasOwnProperty(generation) && this.props.generationFilter[ generation ] === false\r\n                        && (p.hasOwnProperty('generation') && p.generation === Number.parseInt(generation))) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const type in this.props.typeFilter) {\r\n                    if (this.props.typeFilter.hasOwnProperty(type) && this.props.typeFilter[ type ] === true &&\r\n                        (p.types[ 0 ] === type || p.types[ 1 ] === type)) return true;\r\n                }\r\n                return false;\r\n            }).sort((a, b) => {\r\n                let filter = this.gameFilterToAcronym(isGameFilter(this.props.gameFilter));\r\n                if (filter && a.locations.hasOwnProperty(filter) && b.locations.hasOwnProperty(filter)) {\r\n                    return a.locations[ filter ] - b.locations[ filter ];\r\n                } else if (a.hasOwnProperty('pokemonNumber') && b.hasOwnProperty('pokemonNumber')) {\r\n                    return a.pokemonNumber - b.pokemonNumber;\r\n                } else return a - b;\r\n            });\r\n        } else return null;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.filter();\r\n        if (pokemon.length === 0 && !isFilter(this.props)) {\r\n            return <div className='still-loading'>\r\n                <div className='buffer'>\r\n                    <img src='./pokeball.png' alt='pokeball' className='pokeball img-fluid'/>\r\n                </div>\r\n            </div>\r\n        }\r\n        if (pokemon) {\r\n            return (\r\n                <div className='col-md-8 text-center'>\r\n                    {\r\n                        pokemon.map((poke, index) => {\r\n                            let className = poke.types.length === 1 ? `circle ${ poke.types[ 0 ] }` : `circle ${ poke.types[ 1 ] }-main ${ poke.types[ 0 ] }-secondary`;\r\n                            const image = <img className={ className }\r\n                                               src={ `data:image/png;base64, ${ poke.image }` }\r\n                                               alt={ poke.name } width={ '64px' } height={ '64px' }\r\n                                               onClick={ () => this.onClick(poke, index) }/>;\r\n                            return (<span key={ poke.name } title={ poke.name }>{ image }</span>);\r\n                        }) }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","export default [\r\n    'Normal',\r\n    'Fire',\r\n    'Water',\r\n    'Electric',\r\n    'Grass',\r\n    'Ice',\r\n    'Fighting',\r\n    'Poison',\r\n    'Ground',\r\n    'Flying',\r\n    'Psychic',\r\n    'Bug',\r\n    'Rock',\r\n    'Ghost',\r\n    'Dragon',\r\n    'Dark',\r\n    'Steel',\r\n    'Fairy'\r\n];\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport './Pokemon.css';\r\nimport types from '../../utils/types';\r\nimport { isStrongAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass LeftSideBar extends React.Component {\r\n    findStrengthCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isStrongAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='col-md-2 strengths text-right'>\r\n                <div className='text-right'>Strengths:</div>\r\n                <table style={{'width': '100px', 'marginLeft': '65%', 'textAlign': 'left'}}>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>{ val }</td>\r\n                        <td>{ this.findStrengthCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport './Pokemon.css';\r\nimport types from '../../utils/types';\r\nimport { isWeakAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass RightSideBar extends React.Component {\r\n    findWeaknessCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isWeakAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='col-md-2 weaknesses text-left'>\r\n                <span className='text-center'>Weaknesses:</span>\r\n                <table style={{'width': '100px'}}>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>{ val }</td>\r\n                        <td>{ this.findWeaknessCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RightSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Pokemon from './Pokemon';\r\nimport LeftSideBar from \"./LeftSideBar\";\r\nimport RightSideBar from \"./RightSideBar\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div style={{'display': 'flex'}}>\r\n            <LeftSideBar />\r\n            <Pokemon/>\r\n            <RightSideBar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Body);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Body/Pokemon.css';\r\nimport { addPokemonToGrid, removePokemonFromParty } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass Party extends React.Component {\r\n    static setUp(pokemon) {\r\n        let result = [];\r\n        for (const poke of pokemon) {\r\n            result.push(poke);\r\n        }\r\n        while (result.length < 6) {\r\n            result.push('empty');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onClick(pokemon, index) {\r\n        this.props.dispatch(removePokemonFromParty(index));\r\n        this.props.dispatch(addPokemonToGrid(pokemon));\r\n    }\r\n\r\n    render() {\r\n        const party = Party.setUp(this.props.pokemon.party);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            return null;\r\n        }\r\n        const div = <div>&nbsp;</div>;\r\n        return (\r\n            <div className='text-center'>\r\n                { party.map((value, index) => {\r\n                    if (value === 'empty') {\r\n                        return <span style={ { 'display': 'inline-block' } } key={ index }><span\r\n                            className='empty'/>{ div }{ div }<br/></span>\r\n                    }\r\n                    let className;\r\n                    if (value.types.length === 1) {\r\n                        className = `circle ${value.types[ 0 ]}`;\r\n                    } else {\r\n                        className = `circle ${value.types[ 1 ]}-main ${value.types[ 0 ]}-secondary`;\r\n                    }\r\n                    return <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                        <img className={ className } src={ `data:image/png;base64, ${value.image}` }\r\n                             alt={ value.name } width={ '96px' } height={ '96px' } onClick={() => this.onClick(value, index)}/>\r\n                        <div className='name'>\r\n                            { value.name }\r\n                        </div>\r\n                        <div>\r\n                            <span className={ 'type ' + value.types[ 1 ] }>\r\n                                { value.types[ 1 ] }\r\n                            </span>\r\n                            <span className={ 'type ' + value.types[ 0 ] }>\r\n                                { value.types[ 0 ] }\r\n                            </span>\r\n                        </div>\r\n                        <br/>\r\n                    </span>\r\n                }) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Party);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipAllTypesFalse, flipAllTypesTrue, flipTypeFilter } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    selected: state.typeFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked) && this.props.selected[checked] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 18) return 'All Types Selected';\r\n        if (count === 0) return 'No Types Selected';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.selected) {\r\n            if (checkBox === checkedName && this.props.selected[checkedName] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipTypeFilter(type));\r\n    }\r\n\r\n    toggleAll() {\r\n        if (this.count() === 'All Types Selected') {\r\n            this.props.dispatch(flipAllTypesFalse());\r\n        } else {\r\n            this.props.dispatch(flipAllTypesTrue());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col-md-4'>\r\n                    <div className=\"dropdown\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {<span>{this.count()}</span>}\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            <div key={ 'all' } className='ml-4'>\r\n                                <label className='checkbox'>\r\n                                    <button onClick={() => this.toggleAll()} >Select all</button>\r\n                                </label>\r\n                            </div>\r\n                            {this.getNames().map(val =>\r\n                                <div key={ val } className='ml-4'>\r\n                                    <label className='checkbox'>\r\n                                        <input type='checkbox' value={val} onChange={() => this.onChange(val)} checked={this.check(val)}/>\r\n                                        { val }\r\n                                    </label>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGenerationFilter } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked) && this.props.generations[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 7) return 'All Generations';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static addRegionalName(gen) {\r\n        switch (Number.parseInt(gen)) {\r\n            case 1:\r\n                return `${gen}: Kanto`;\r\n            case 2:\r\n                return `${gen}: Johto`;\r\n            case 3:\r\n                return `${gen}: Hoenn`;\r\n            case 4:\r\n                return `${gen}: Sinnoh`;\r\n            case 5:\r\n                return `${gen}: Unova`;\r\n            case 6:\r\n                return `${gen}: Kalos`;\r\n            case 7:\r\n                return `${gen}: Alola`;\r\n            default:\r\n                return gen;\r\n        }\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.generations) {\r\n            if (checkBox === checkedName && this.props.generations[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGenerationFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col-md-4'>\r\n                    <div className=\"dropdown float-right\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            { <span>{ this.count() }</span> }\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            { this.getNames().map(val =>\r\n                                <div key={ val } className='ml-4'>\r\n                                    <label className='checkbox'>\r\n                                        <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                               defaultChecked={ this.check(val) }/>\r\n                                        { LeftHeader.addRegionalName(val) }\r\n                                    </label>\r\n                                </div>) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGameFilter } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    games: state.gameFilter\r\n});\r\n\r\nclass MiddleHeader extends React.Component {\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const game in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(game) && this.props.games[ game ] === true) {\r\n                return game;\r\n            }\r\n        }\r\n        if (count === 0) return 'All Games';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.games) {\r\n            if (checkedName === checkBox && this.props.games[ checkBox ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGameFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col-md-4 text-center'>\r\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        { <span>{this.count()}</span> }\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" style={ { 'right': 0, 'left': 0 } }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val } className='ml-4'>\r\n                                <label>\r\n                                <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                    checked={this.check(val)} />\r\n                                { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MiddleHeader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LeftHeader from \"./LeftHeader\";\r\nimport RightHeader from \"./RightHeader\";\r\nimport MiddleHeader from './MiddleHeader';\r\nimport { isFilter } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    all: state.pokemon,\r\n    party: state.party,\r\n    selected: state.typeFilter,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        if (!isFilter(this.props) && !this.props.all.all.length && !this.props.all.party.length) {\r\n            return <span/>;\r\n        }\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n                        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                    <LeftHeader style={{'margin-right': '50%'}}/>\r\n                    <MiddleHeader />\r\n                    <RightHeader />\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Party from \"./Party\";\r\nimport Navbar from \"./navbar\";\r\nimport './header.css';\r\nconst Header = () => {\r\n    return (\r\n        <span>\r\n            <Navbar/>\r\n            <div className='party'>\r\n                <Party/>\r\n            </div>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default connect()(Header);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Body from './Body/';\r\nimport Header from \"./Header/\";\r\n\r\nconst Page = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Body/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Page);\r\n","import types from \"../utils/types\";\r\n\r\nconst initialState = {};\r\nfor (const type of types) {\r\n    initialState[type] = true;\r\n}\r\nconst typeFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_TYPE_FILTER':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type) && type === action.typeToFlip) {\r\n                    state[type] = !state[type];\r\n                    break;\r\n                }\r\n            }\r\n            return {...state};\r\n        case 'FLIP_ALL_TYPE_FILTER_TRUE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[type] = true;\r\n                }\r\n            }\r\n            return {...state};\r\n        case 'FLIP_ALL_TYPE_FILTER_FALSE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[type] = false;\r\n                }\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default typeFilter","const generations = [1,2,3,4,5,6,7];\r\n\r\nconst initialState = {};\r\nfor (const type of generations) {\r\n    initialState[type] = true;\r\n}\r\nconst generationFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GEN_FILTER':\r\n            for (const generation in state) {\r\n                if (state.hasOwnProperty(generation) && generation === action.generationToFlip) {\r\n                    state[generation] = !state[generation];\r\n                    break;\r\n                }\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default generationFilter;\r\n","const initialState = {\r\n    all: [],\r\n    party: []\r\n};\r\nconst pokemon = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'ADD_POKEMON_BULK':\r\n                if (action.pokemon) {\r\n                    const all = action.pokemon;\r\n                    return {\r\n                        ...state,\r\n                        all\r\n                    };\r\n                } else return { ...state };\r\n            case 'ADD_TO_PARTY':\r\n                if (action.pokemon) {\r\n                    const party = state.party;\r\n                    for (const poke of state.all) {\r\n                        if (poke.name === action.pokemon.name) {\r\n                            party.push(poke);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return { ...state, party };\r\n                } else return { ...state };\r\n            case 'REMOVE_FROM_PARTY':\r\n                if (action.index || action.index === 0) {\r\n                    const party = state.party;\r\n                    party.splice(action.index, 1);\r\n                    return { ...state, party };\r\n                }\r\n                return { ...state };\r\n            case 'ADD_POKEMON':\r\n                if (action.pokemon) {\r\n                    const all = state.all;\r\n                    let index = 0;\r\n                    if (all.find(x => x.pokemonNumber === action.pokemon.pokemonNumber)) {\r\n                        return { ...state };\r\n                    }\r\n                    for (const poke of all) {\r\n                        if (poke.number > index && poke.number < action.pokemon.number) {\r\n                            index = state.all.indexOf(poke) + 1;\r\n                            if (index === action.pokemon.number - 1) break;\r\n                        }\r\n                    }\r\n                    all.splice(index, 0, action.pokemon);\r\n                    return { ...state, all };\r\n                } else return { ...state };\r\n            case 'REMOVE_POKEMON':\r\n                if (action.index || action.index === 0) {\r\n                    let all = state.all;\r\n                    all.splice(action.index, 1);\r\n                    return { ...state, all };\r\n                }\r\n                return { ...state };\r\n            default:\r\n                return { ...state };\r\n        }\r\n    }\r\n;\r\n\r\nexport default pokemon;\r\n","import { combineReducers } from 'redux';\r\nimport typeFilter from './typeFilter';\r\nimport generationFilter from './generationFilter';\r\nimport gameFilter from './gameFilter';\r\nimport pokemon from \"./pokemon\";\r\n\r\nexport default combineReducers({\r\n    typeFilter,\r\n    generationFilter,\r\n    gameFilter,\r\n    pokemon\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport reducer from './reducers/';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nexport default () => {\r\n    const persistConfig = {\r\n        key: 'root',\r\n        storage,\r\n        stateReconciler: hardSet\r\n    };\r\n\r\n    const persistedReducer = persistReducer(persistConfig, reducer);\r\n    // noinspection JSUnresolvedVariable\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(persistedReducer, composeEnhancers(\r\n        applyMiddleware(thunkMiddleware)\r\n    ));\r\n    const persistor = persistStore(store);\r\n    return { store, persistor };\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Page from \"./components/Page\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createStore from './createStore';\n\nconst { store, persistor } = createStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={ store }>\n                <PersistGate loading={ null } persistor={persistor}>\n                    <Page/>\n                </PersistGate>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}