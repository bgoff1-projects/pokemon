{"version":3,"sources":["utils/index.js","utils/map.js","actions/index.jsx","reducers/gameFilter.jsx","utils/pokemon.js","components/Body/Pokemon.jsx","utils/types.js","components/Body/LeftSideBar.jsx","components/Body/RightSideBar.jsx","components/Body/index.jsx","components/Header/Party.jsx","components/Header/navbar/TypeFilter.jsx","components/Header/navbar/CoverageFilter.jsx","components/Header/navbar/GameFilter.jsx","components/Header/navbar/GenerationFilter.jsx","components/Header/navbar/PartiesLink.jsx","components/Header/navbar/ResetFilters.jsx","components/Header/navbar/SearchFilter.jsx","components/Header/navbar/index.jsx","components/Header/index.jsx","components/Body/Footer.jsx","components/Page.jsx","components/Parties.jsx","reducers/typeFilter.jsx","reducers/generationFilter.jsx","reducers/pokemon.jsx","reducers/savedParties.jsx","reducers/index.jsx","createStore.js","App.jsx","serviceWorker.js","index.js"],"names":["url","map","addHalf","listOfHalfEffective","item","set","addDouble","listOfDoubleEffective","Map","normal","addNormal","fire","addFire","water","addWater","electric","addElectric","grass","addGrass","ice","addIce","fighting","addFighting","poison","addPoison","ground","addGround","flying","addFlying","psychic","addPsychic","bug","addBug","rock","addRock","ghost","addGhost","dragon","addDragon","dark","addDark","steel","addSteel","fairy","addFairy","addAll","createMap","isStrongAgainst","pokemon","type","types","pokemonType","get","has","isTypeStrongAgainst","len","length","effectiveness1","effectiveness2","getPartyTypes","party","result","partyMember","includes","push","isAPartyMemberStrong","partyTypes","isWeakAgainst","type1","isFilter","props","filter","generationFilter","gameFilter","typeFilter","checkingParty","searchFilter","addPokemonToStore","updateSearchFilter","games","initialState","isGameFilter","state","action","game","gameToFlip","hasOwnProperty","getImageSource","poke","process","pokemonNumber","name","gameFilterToAcronym","View","all","dispatch","fetch","then","response","json","number","i","this","addPokemonToParty","region","generation","index","findIndex","lackingCoverage","p","getArrayFromMap","Number","parseInt","sort","a","b","locations","className","image","src","alt","width","height","onClick","key","title","React","Component","connect","LeftSideBar","count","val","findStrengthCount","RightSideBar","findWeaknessCount","Party","removePokemonFromParty","addPokemonToGrid","newParty","setUp","div","value","style","saveParty","TypeFilter","active","checked","selected","checkedName","checkBox","typeToFlip","setState","toggleAll","getNames","onChange","check","CoverageFilter","handleClick","GameFilter","findToggledGame","members","LeftHeader","generations","generationToFlip","defaultChecked","addRegionalName","gen","PartiesLink","to","ResetFilters","SearchFilter","defaultValue","onKeyUp","event","console","log","target","placeholder","Navbar","role","aria-label","aria-expanded","aria-hidden","id","GenerationFilter","Parties","savedParties","parties","partyIndex","concat","find","each","insertPokemon","x","indexOf","splice","combineReducers","persistConfig","storage","stateReconciler","hardSet","persistedReducer","persistReducer","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","App","loading","basename","exact","path","component","Page","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20e108b2.chunk.js","sourcesContent":["import { createMap } from './map';\r\n\r\nconst env = 'PROD';\r\n\r\nlet URL = '';\r\nif (env === 'DEV') {\r\n    URL = 'http://localhost:8000';\r\n} else {\r\n    URL = 'https://pure-caverns-33114.herokuapp.com';\r\n}\r\nexport const url = URL;\r\n\r\nconst map = createMap();\r\n\r\nexport function isStrongAgainst(pokemon, type) {\r\n    for (const pokemonType of pokemon.types) {\r\n        if (map.get(pokemonType).has(type) && map.get(pokemonType).get(type) === 2) return true;\r\n    }\r\n}\r\n\r\nexport function isTypeStrongAgainst(type, pokemon) {\r\n    const len = pokemon.types.length;\r\n    if (len !== 0) {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const effectiveness1 = map.get(type).get(pokemon.types[0]);\r\n            if (len === 1) return effectiveness1 === 2;\r\n            if (len === 2) {\r\n                if (map.get(type).has(pokemon.types[1])) {\r\n                    const effectiveness2 = map.get(type).get(pokemon.types[1]);\r\n                    if ((effectiveness1 === 2 && effectiveness2 >= 1) || (effectiveness2 === 2 && effectiveness1 >= 1)) return true;\r\n                } else if (effectiveness1 === 2) return true;\r\n            }\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPartyTypes(party) {\r\n    const result = [];\r\n    for (const partyMember of party) {\r\n        for (const type of partyMember.types) {\r\n            if (!result.includes(type)) {\r\n                result.push(type);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function isAPartyMemberStrong(partyTypes, pokemon) {\r\n    for (const type of partyTypes) {\r\n        if (isTypeStrongAgainst(type, pokemon)) { return true; }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isWeakAgainst(pokemon, type) {\r\n    if (pokemon.types.length === 1) {\r\n        if (map.get(type).has(pokemon.types[ 0 ]) && map.get(type).get(pokemon.types[ 0 ]) === 2) {\r\n            return true;\r\n        }\r\n    } else {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const type1 = map.get(type).get(pokemon.types[0]);\r\n            if (map.get(type).has(pokemon.types[1])) {\r\n                const type2 = map.get(type).get(pokemon.types[1]);\r\n                if (type1 * type2 >= 2) return true;\r\n            } else if (type1 === 2) return true;\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isFilter(props) {\r\n    for (const filter in props.generationFilter) {\r\n        if (!props.generationFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.gameFilter) {\r\n        if (props.gameFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.typeFilter) {\r\n        if (!props.typeFilter[filter]) return true;\r\n    }\r\n    return props.pokemon && !props.pokemon.checkingParty && props.pokemon.searchFilter;\r\n}\r\n","export function createMap() {\r\n    function addNormal(map) {\r\n        const normal = new Map();\r\n        addHalf(['Rock', 'Steel'], normal);\r\n        normal.set('Ghost', 0);\r\n        map.set('Normal', normal);\r\n    }\r\n    function addFire(map) {\r\n        const fire = new Map();\r\n        addHalf(['Fire', 'Water', 'Rock', 'Dragon'], fire);\r\n        addDouble(['Grass', 'Ice', 'Bug', 'Steel'], fire);\r\n        map.set('Fire', fire);\r\n    }\r\n    function addWater(map) {\r\n        const water = new Map();\r\n        addDouble(['Fire', 'Ground', 'Rock'], water);\r\n        addHalf(['Water', 'Grass', 'Dragon'], water);\r\n        map.set('Water', water);\r\n    }\r\n    function addElectric(map) {\r\n        const electric = new Map();\r\n        addDouble(['Water', 'Flying'], electric);\r\n        addHalf(['Electric', 'Grass', 'Dragon'], electric);\r\n        electric.set('Ground', 0);\r\n        map.set('Electric', electric);\r\n    }\r\n    function addGrass(map) {\r\n        const grass = new Map();\r\n        addHalf(['Fire', 'Grass', 'Poison', 'Flying', 'Bug', 'Dragon', 'Steel'], grass);\r\n        addDouble(['Water', 'Ground', 'Rock'], grass);\r\n        map.set('Grass', grass);\r\n    }\r\n    function addIce(map) {\r\n        const ice = new Map();\r\n        addHalf(['Fire', 'Water', 'Ice', 'Steel'], ice);\r\n        addDouble(['Grass', 'Ground', 'Flying', 'Dragon'], ice);\r\n        map.set('Ice', ice);\r\n    }\r\n    function addFighting(map) {\r\n        const fighting = new Map();\r\n        addDouble(['Normal', 'Ice', 'Rock', 'Dark', 'Steel'], fighting);\r\n        addHalf(['Poison', 'Flying', 'Psychic', 'Bug', 'Fairy'], fighting);\r\n        fighting.set('Ghost', 0);\r\n        map.set('Fighting', fighting);\r\n    }\r\n    function addPoison(map) {\r\n        const poison = new Map();\r\n        addHalf(['Poison', 'Ground', 'Rock', 'Ghost'], poison);\r\n        addDouble(['Grass', 'Fairy'], poison);\r\n        poison.set('Steel', 0);\r\n        map.set('Poison', poison);\r\n    }\r\n    function addGround(map) {\r\n        const ground = new Map();\r\n        addHalf(['Grass', 'Bug'], ground);\r\n        addDouble(['Fire', 'Electric', 'Poison', 'Rock', 'Steel'], ground);\r\n        ground.set('Flying', 0);\r\n        map.set('Ground', ground);\r\n    }\r\n    function addFlying(map) {\r\n        const flying = new Map();\r\n        addHalf(['Electric', 'Rock', 'Steel'], flying);\r\n        addDouble(['Grass', 'Fighting', 'Bug'], flying);\r\n        map.set('Flying', flying);\r\n    }\r\n    function addPsychic(map) {\r\n        const psychic = new Map();\r\n        addHalf(['Psychic', 'Steel'], psychic);\r\n        addDouble(['Fighting', 'Poison'], psychic);\r\n        psychic.set('Dark', 0);\r\n        map.set('Psychic', psychic);\r\n    }\r\n    function addBug(map) {\r\n        const bug = new Map();\r\n        addHalf(['Fire', 'Fighting', 'Poison', 'Flying', 'Ghost', 'Steel', 'Fairy'], bug);\r\n        addDouble(['Grass', 'Psychic', 'Dark'], bug);\r\n        map.set('Bug', bug);\r\n    }\r\n    function addRock(map) {\r\n        const rock = new Map();\r\n        addDouble(['Fire', 'Ice', 'Flying', 'Bug'], rock);\r\n        addHalf(['Fighting', 'Ground', 'Steel'], rock);\r\n        map.set('Rock', rock);\r\n    }\r\n    function addGhost(map) {\r\n        const ghost = new Map();\r\n        ghost.set('Normal', 0);\r\n        addHalf(['Dark'], ghost);\r\n        addDouble(['Ghost', 'Psychic'], ghost);\r\n        map.set('Ghost', ghost);\r\n    }\r\n    function addDragon(map) {\r\n        const dragon = new Map();\r\n        addDouble(['Dragon'], dragon);\r\n        addHalf(['Steel'], dragon);\r\n        dragon.set('Fairy', 0);\r\n        map.set('Dragon', dragon);\r\n    }\r\n    function addDark(map) {\r\n        const dark = new Map();\r\n        addHalf(['Fighting', 'Dragon', 'Fairy'], dark);\r\n        addDouble(['Psychic', 'Ghost'], dark);\r\n        map.set('Dark', dark);\r\n    }\r\n    function addSteel(map) {\r\n        const steel = new Map();\r\n        addHalf(['Fire', 'Water', 'Electric', 'Steel'], steel);\r\n        addDouble(['Ice', 'Fairy'], steel);\r\n        map.set('Steel', steel);\r\n    }\r\n    function addFairy(map) {\r\n        const fairy = new Map();\r\n        addDouble(['Fighting', 'Dragon', 'Dark'], fairy);\r\n        addHalf(['Fire', 'Poison', 'Steel'], fairy);\r\n        map.set('Fairy', fairy);\r\n    }\r\n    function addAll() {\r\n        const map = new Map();\r\n        addNormal(map);\r\n        addFire(map);\r\n        addWater(map);\r\n        addElectric(map);\r\n        addGrass(map);\r\n        addIce(map);\r\n        addFighting(map);\r\n        addPoison(map);\r\n        addGround(map);\r\n        addFlying(map);\r\n        addPsychic(map);\r\n        addBug(map);\r\n        addRock(map);\r\n        addGhost(map);\r\n        addDragon(map);\r\n        addDark(map);\r\n        addSteel(map);\r\n        addFairy(map);\r\n        return map;\r\n    }\r\n    function addHalf(listOfHalfEffective, map) {\r\n        for (const item of listOfHalfEffective) {\r\n            map.set(item, 0.5);\r\n        }\r\n    }\r\n    function addDouble(listOfDoubleEffective, map) {\r\n        for (const item of listOfDoubleEffective) {\r\n            map.set(item, 2);\r\n        }\r\n    }\r\n\r\n    return addAll();\r\n}","import { url } from \"../utils\";\r\n\r\nexport const addPokemonToStore = pokemon => ({\r\n    type: 'ADD_POKEMON_BULK',\r\n    pokemon\r\n});\r\n\r\nexport const checkCoverage = () => ({\r\n    type: 'CHECK_PARTY'\r\n});\r\n\r\nexport const addPokemonToParty = pokemon => ({\r\n    type: 'ADD_TO_PARTY',\r\n    pokemon,\r\n});\r\n\r\nexport const removePokemonFromParty = index => ({\r\n    type: 'REMOVE_FROM_PARTY',\r\n    index\r\n});\r\n\r\nexport const addPokemonToGrid = pokemon => ({\r\n    type: 'ADD_POKEMON',\r\n    pokemon\r\n});\r\n\r\nexport const removePokemonFromGrid = index => ({\r\n    type: 'REMOVE_POKEMON',\r\n    index\r\n});\r\n\r\nexport const flipTypeFilter = typeToFlip => ({\r\n    type: 'FLIP_TYPE_FILTER',\r\n    typeToFlip\r\n});\r\n\r\nexport const flipGenerationFilter = generationToFlip => ({\r\n    type: 'FLIP_GEN_FILTER',\r\n    generationToFlip\r\n});\r\n\r\nexport const flipGameFilter = gameToFlip => ({\r\n   type: 'FLIP_GAME_FILTER',\r\n   gameToFlip\r\n});\r\n\r\nexport const turnOffAllGames = () => ({\r\n    type: 'SET_ALL_GAMES_OFF'\r\n});\r\n\r\nexport const flipAllTypesTrue = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_TRUE'\r\n});\r\n\r\nexport const flipAllTypesFalse = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_FALSE'\r\n});\r\n\r\nexport const saveParty = (party) => ({\r\n    type: 'SAVE_PARTY',\r\n    party\r\n});\r\n\r\nexport const removeParty = (party) => ({\r\n    type: 'REMOVE_PARTY',\r\n    party\r\n});\r\n\r\nexport const resetAllFilters = () => ({\r\n    type: 'RESET_ALL_FILTERS'\r\n});\r\n\r\nexport const clearParty = (members) => ({\r\n    type: 'CLEAR_PARTY',\r\n    members\r\n});\r\n\r\nexport const updateSearchFilter = (searchFilter) => ({\r\n    type: 'UPDATE_SEARCH_FILTER',\r\n    searchFilter\r\n});\r\n\r\nexport function getPokemon() {\r\n    return dispatch => {\r\n        return fetch(`${url}/pokemon`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(addPokemonToStore(json)))\r\n    }\r\n}\r\n","export const games = [\r\n    'Red | Blue | Yellow',\r\n    'Gold | Silver | Crystal',\r\n    'Ruby | Sapphire | Emerald',\r\n    'Diamond | Pearl',\r\n    'Platinum',\r\n    'HeartGold | SoulSilver',\r\n    'Black | White',\r\n    'Black 2 | White 2',\r\n    'X | Y',\r\n    'Omega Ruby | Alpha Sapphire',\r\n    'Sun | Moon',\r\n    'Ultra Sun | Ultra Moon'\r\n];\r\n\r\nconst initialState = {};\r\n\r\nfor (const type of games) {\r\n    initialState[ type ] = false;\r\n}\r\n\r\nexport function isGameFilter(state) {\r\n    for (const filter in state) {\r\n        if (state[ filter ]) return filter;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst gameFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GAME_FILTER':\r\n            const filter = isGameFilter(state);\r\n            if (filter) {\r\n                for (const game in state) {\r\n                    state[ game ] = false;\r\n                }\r\n                if (filter !== action.gameToFlip) {\r\n                    for (const game in state) {\r\n                        state[ game ] = game === action.gameToFlip;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const game in state) {\r\n                    state[ game ] = game === action.gameToFlip;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'SET_ALL_GAMES_OFF':\r\n            for (const game in state) {\r\n                if (state.hasOwnProperty(game)) {\r\n                    state[ game ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'RESET_ALL_FILTERS':\r\n            for (const type of games) {\r\n                state[ type ] = false;\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default gameFilter;\r\n","export function getImageSource(poke) {\r\n    return process.env.PUBLIC_URL + `/images/${ poke.pokemonNumber + (poke.name.includes('Alolan ') || poke.name.includes('alolan ') ? '-alola' : '') }.png`\r\n}\r\nexport function gameFilterToAcronym(gameFilter) {\r\n    switch (gameFilter) {\r\n        case 'Red | Blue | Yellow':\r\n            return 'RBY';\r\n        case 'Gold | Silver | Crystal':\r\n            return 'GSC';\r\n        case 'Ruby | Sapphire | Emerald':\r\n            return 'RSE';\r\n        case 'Diamond | Pearl':\r\n            return 'DP';\r\n        case 'Platinum':\r\n            return 'PT';\r\n        case 'HeartGold | SoulSilver':\r\n            return 'HGSS';\r\n        case 'Black | White':\r\n            return 'BW';\r\n        case 'Black 2 | White 2':\r\n            return 'BW2';\r\n        case 'X | Y':\r\n            return 'XY';\r\n        case 'Omega Ruby | Alpha Sapphire':\r\n            return 'ORAS';\r\n        case 'Sun | Moon':\r\n            return 'SM';\r\n        case 'Ultra Sun | Ultra Moon':\r\n            return 'USUM';\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nexport function getArrayFromMap(map) {\r\n    let result = [];\r\n    for (const i in map) {\r\n        if (map[ i ]) result.push(gameFilterToAcronym(i));\r\n    }\r\n    return result;\r\n}\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { getPokemon, addPokemonToParty, removePokemonFromGrid } from \"../../actions\";\r\nimport { isGameFilter } from '../../reducers/gameFilter';\r\nimport '../../styles/Pokemon.scss';\r\nimport { isFilter } from '../../utils/'\r\nimport { gameFilterToAcronym, getArrayFromMap, getImageSource } from \"../../utils/pokemon\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party,\r\n    typeFilter: state.typeFilter,\r\n    generationFilter: state.generationFilter,\r\n    gameFilter: state.gameFilter\r\n});\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            props.dispatch(getPokemon());\r\n        }\r\n    }\r\n\r\n    findIndex(number, name) {\r\n        for (let i = 0; i < this.props.pokemon.all.length; i++) {\r\n            if (this.props.pokemon.all[ i ].pokemonNumber === number && name === this.props.pokemon.all[ i ].name) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(pokemon) {\r\n        if (this.props.pokemon.party.length !== 6) {\r\n            this.props.dispatch(addPokemonToParty({\r\n                name: pokemon.name,\r\n                types: pokemon.types,\r\n                pokemonNumber: pokemon.pokemonNumber,\r\n                region: pokemon.region,\r\n                generation: pokemon.generation\r\n            }));\r\n\r\n            this.props.dispatch(removePokemonFromGrid(this.findIndex(pokemon.pokemonNumber, pokemon.name)));\r\n        }\r\n    }\r\n\r\n    filter() {\r\n        if (this.props && this.props.pokemon.all) {\r\n            const toFilter = this.props.pokemon.checkingParty ?\r\n                this.props.pokemon.lackingCoverage : this.props.pokemon.all;\r\n            const gamesFiltered = toFilter.filter(p => !(isGameFilter(this.props.gameFilter) && !p.games.includes(getArrayFromMap(this.props.gameFilter)[ 0 ])));\r\n            const genFiltered = gamesFiltered.filter(p => {\r\n                for (const generation in this.props.generationFilter) {\r\n                    if (this.props.generationFilter.hasOwnProperty(generation) && this.props.generationFilter[ generation ] === false\r\n                        && (p.hasOwnProperty('generation') && p.generation === Number.parseInt(generation))) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n            const searchFiltered = genFiltered.filter(p => !(this.props.pokemon.searchFilter && !p.name.includes(this.props.pokemon.searchFilter)));\r\n            const typeFiltered = searchFiltered.filter(p => {\r\n                for (const type in this.props.typeFilter) {\r\n                    if (this.props.typeFilter.hasOwnProperty(type) && this.props.typeFilter[ type ] === true &&\r\n                        (p.types[ 0 ] === type || p.types[ 1 ] === type)) return true;\r\n                }\r\n                return false;\r\n            });\r\n            return typeFiltered.sort((a, b) => {\r\n                let filter = gameFilterToAcronym(isGameFilter(this.props.gameFilter));\r\n                if (filter && a.locations.hasOwnProperty(filter) && b.locations.hasOwnProperty(filter)) {\r\n                    return a.locations[ filter ] - b.locations[ filter ];\r\n                } else if (a.hasOwnProperty('pokemonNumber') && b.hasOwnProperty('pokemonNumber')) {\r\n                    if (a.pokemonNumber === b.pokemonNumber) {\r\n                        return a.generation - b.generation;\r\n                    }\r\n                    return a.pokemonNumber - b.pokemonNumber;\r\n                } else return a - b;\r\n            });\r\n        } else return null;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.filter();\r\n        if (pokemon.length === 0 && !isFilter(this.props)) {\r\n            return <div className='still-loading'>\r\n                <div className='buffer'>\r\n                    <img src='./pokeball.png' alt='pokeball' className='pokeball img-fluid'/>\r\n                </div>\r\n            </div>\r\n        }\r\n        if (pokemon) {\r\n            return (\r\n                <div className='column is-four-fifths text-center'>\r\n                    {\r\n                        pokemon.map((poke, index) => {\r\n                            let className = poke.types.length === 1 ? `circle ${ poke.types[ 0 ] }` : `circle ${ poke.types[ 1 ] }-main ${ poke.types[ 0 ] }-secondary`;\r\n                            const image = <img className={ className }\r\n                                               src={ getImageSource(poke) }\r\n                                               alt={ poke.name } width={ '64px' } height={ '64px' }\r\n                                               onClick={ () => this.onClick(poke, index) }/>;\r\n                            return (<span key={ poke.name } title={ poke.name }>{ image }</span>);\r\n                        }) }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","export default [\r\n    'Normal',\r\n    'Fire',\r\n    'Water',\r\n    'Electric',\r\n    'Grass',\r\n    'Ice',\r\n    'Fighting',\r\n    'Poison',\r\n    'Ground',\r\n    'Flying',\r\n    'Psychic',\r\n    'Bug',\r\n    'Rock',\r\n    'Ghost',\r\n    'Dragon',\r\n    'Dark',\r\n    'Steel',\r\n    'Fairy'\r\n];\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport types from '../../utils/types';\r\nimport { isStrongAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass LeftSideBar extends React.Component {\r\n    findStrengthCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isStrongAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='column text-center'>\r\n                <div className='type-table-header'>Strengths:</div>\r\n                <table className='text-center strengths'>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={ index }>\r\n                        <td>&nbsp;{ val }&nbsp;</td>\r\n                        <td>{ this.findStrengthCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport types from '../../utils/types';\r\nimport { isWeakAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass RightSideBar extends React.Component {\r\n    findWeaknessCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isWeakAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='column text-center'>\r\n                <span className='type-table-header'>Weaknesses:</span>\r\n                <table className='text-center weaknesses'>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>&nbsp;{ val }&nbsp;</td>\r\n                        <td>{ this.findWeaknessCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RightSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Pokemon from './Pokemon';\r\nimport LeftSideBar from \"./LeftSideBar\";\r\nimport RightSideBar from \"./RightSideBar\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div className='columns'>\r\n            <LeftSideBar />\r\n            <Pokemon/>\r\n            <RightSideBar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Body);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/type-colorings.scss';\r\nimport { addPokemonToGrid, removePokemonFromParty, saveParty } from \"../../actions\";\r\nimport { getImageSource } from \"../../utils/pokemon\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass Party extends React.Component {\r\n    static setUp(pokemon) {\r\n        let result = [];\r\n        for (const poke of pokemon) {\r\n            result.push(poke);\r\n        }\r\n        while (result.length < 6) {\r\n            result.push('empty');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onClick(pokemon, index) {\r\n        this.props.dispatch(removePokemonFromParty(index));\r\n        this.props.dispatch(addPokemonToGrid(pokemon));\r\n    }\r\n\r\n    saveParty() {\r\n        const newParty = [];\r\n        for (const partyMember of this.props.pokemon.party) {\r\n            newParty.push(partyMember.name);\r\n        }\r\n        this.props.dispatch(saveParty(newParty));\r\n    }\r\n\r\n\r\n    render() {\r\n        const party = Party.setUp(this.props.pokemon.party);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            return null;\r\n        }\r\n        const div = <div>&nbsp;</div>;\r\n        return (\r\n            <div className='text-center'>\r\n                <span className='partyMembers rounded'>\r\n                { party.map((value, index) => {\r\n                    if (value === 'empty') {\r\n                        return <span style={ { 'display': 'inline-block' } } key={ index }><span\r\n                            className='empty'/>{ div }{ div }<br/></span>\r\n                    }\r\n                    let className;\r\n                    let types;\r\n                    if (value.types.length === 1) {\r\n                        className = `circle ${ value.types[ 0 ] }`;\r\n                        types = (<span className={ 'type ' + value.types[ 0 ] }>\r\n                            { value.types[ 0 ] }\r\n                        </span>);\r\n                    } else {\r\n                        className = `circle ${ value.types[ 1 ] }-main ${ value.types[ 0 ] }-secondary`;\r\n                        types = (<span><span className={ 'type ' + value.types[ 1 ] }>\r\n                                { value.types[ 1 ] }\r\n                            </span><span className={ 'type ' + value.types[ 0 ] }>\r\n                            { value.types[ 0 ] }\r\n                        </span></span>);\r\n                    }\r\n                    return <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                        <img className={ className } src={ getImageSource(value) }\r\n                             alt={ value.name } width={ '96px' } height={ '96px' }\r\n                             onClick={ () => this.onClick(value, index) }/>\r\n                        <div className='name'>\r\n                            { value.name }\r\n                        </div>\r\n                        <div>\r\n                            { types }\r\n                        </div>\r\n                        <br/>\r\n                    </span>\r\n                }) }\r\n                    <span style={ { 'verticalAlign': 'top', 'paddingTop': '.75em' } } className=\"icon\"\r\n                          onClick={ () => this.saveParty() } title='Save Pokemon Party'>\r\n                        <i className=\"fas fa-plus-circle pointer\"/>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Party);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipAllTypesFalse, flipAllTypesTrue, flipTypeFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    selected: state.typeFilter\r\n});\r\n\r\nclass TypeFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: true\r\n        }\r\n    }\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked) && this.props.selected[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 18) return 'All Types Selected';\r\n        if (count === 0) return 'No Types Selected';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.selected) {\r\n            if (checkBox === checkedName && this.props.selected[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipTypeFilter(type));\r\n    }\r\n\r\n    toggleAll() {\r\n        if (this.count() === 'All Types Selected') {\r\n            this.props.dispatch(flipAllTypesFalse());\r\n        } else {\r\n            this.props.dispatch(flipAllTypesTrue());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.count() }\r\n                    </span>\r\n                    <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                        <div key={ 'all' }>\r\n                            <label className='navbar-item'>\r\n                                <button className='button' onClick={ () => this.toggleAll() }>Select all</button>\r\n                            </label>\r\n                        </div>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val }>\r\n                                <label className='navbar-item'>\r\n                                    <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                           checked={ this.check(val) }/>\r\n                                    { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TypeFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { checkCoverage } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n});\r\n\r\nclass CoverageFilter extends React.Component {\r\n\r\n    handleClick() {\r\n        this.props.dispatch(checkCoverage());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar-item pointer' onClick={ () => this.handleClick() }>{ this.props.pokemon.checkingParty ? 'Showing Pokemon without Coverage' : 'Check Coverage'}</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CoverageFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { clearParty, flipGameFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    games: state.gameFilter\r\n});\r\n\r\nclass GameFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        }\r\n    }\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const game in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(game) && this.props.games[ game ] === true) {\r\n                return game;\r\n            }\r\n        }\r\n        if (count === 0) return 'All Games';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.games) {\r\n            if (checkedName === checkBox && this.props.games[ checkBox ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findToggledGame() {\r\n        for (const game in this.props.games) {\r\n            if (this.props.games[ game ]) {\r\n                return game;\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange(type) {\r\n        if (this.findToggledGame() !== type && this.props.pokemon.party.length > 0) {\r\n            this.props.dispatch(clearParty(this.props.pokemon.party));\r\n        }\r\n        this.props.dispatch(flipGameFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.count() }\r\n                    </span>\r\n                    <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val }>\r\n                                <label className='navbar-item'>\r\n                                    <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                           checked={ this.check(val) }/>\r\n                                    { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGenerationFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        }\r\n    }\r\n\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked) && this.props.generations[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 7) return 'All Generations';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static addRegionalName(gen) {\r\n        switch (Number.parseInt(gen)) {\r\n            case 1:\r\n                return `${ gen }: Kanto`;\r\n            case 2:\r\n                return `${ gen }: Johto`;\r\n            case 3:\r\n                return `${ gen }: Hoenn`;\r\n            case 4:\r\n                return `${ gen }: Sinnoh`;\r\n            case 5:\r\n                return `${ gen }: Unova`;\r\n            case 6:\r\n                return `${ gen }: Kalos`;\r\n            case 7:\r\n                return `${ gen }: Alola`;\r\n            default:\r\n                return gen;\r\n        }\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.generations) {\r\n            if (checkBox === checkedName && this.props.generations[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGenerationFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.count() }\r\n                    </span>\r\n                    <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val }>\r\n                                <label className='navbar-item'>\r\n                                    <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                           defaultChecked={ this.check(val) }/>\r\n                                    { LeftHeader.addRegionalName(val) }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class PartiesLink extends React.Component {\r\n    render() {\r\n        return <Link className='navbar-item pointer' to={'/parties'}>Saved Parties</Link>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { resetAllFilters } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n});\r\n\r\nclass ResetFilters extends React.Component {\r\n\r\n    handleClick() {\r\n        this.props.dispatch(resetAllFilters());\r\n    }\r\n    render() {\r\n        return <div className='navbar-item pointer' onClick={() => this.handleClick()}>Reset All Filters</div>\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ResetFilters);\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { updateSearchFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    selected: state.typeFilter\r\n});\r\n\r\nclass SearchFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: true,\r\n            value: ''\r\n        };\r\n        this.props.dispatch(updateSearchFilter(this.state.value));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.state.value ? `Searching: ${this.state.value}` : 'Search Filter' }\r\n                    </span>\r\n                <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                    <input className='input' type='text' defaultValue={ this.state.value }\r\n                           onKeyUp={ (event) => {\r\n                               console.log(event.target.value);\r\n                               this.setState({ value: event.target.value });\r\n                               this.props.dispatch(updateSearchFilter(event.target.value));\r\n                           } }\r\n                           style={ { 'marginLeft': '5%', 'width': '90%' } }\r\n                    placeholder='Pikachu, Eevee,'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchFilter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TypeFilter from './TypeFilter';\r\nimport CoverageFilter from './CoverageFilter';\r\nimport GameFilter from './GameFilter';\r\nimport GenerationFilter from './GenerationFilter';\r\nimport { isFilter } from '../../../utils';\r\nimport PartiesLink from \"./PartiesLink\";\r\nimport ResetFilters from \"./ResetFilters\";\r\nimport SearchFilter from \"./SearchFilter\";\r\n\r\nconst mapStateToProps = state => ({\r\n    all: state.pokemon,\r\n    party: state.party,\r\n    selected: state.typeFilter,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (!isFilter(this.props) && !this.props.all.all.length && !this.props.all.party.length) {\r\n            return <span/>;\r\n        }\r\n        return (\r\n            <nav role=\"navigation\" className=\"navbar is-fixed-top\">\r\n                <div className='navbar-brand'>\r\n                    <span className='navbar-item'>\r\n                        <img src='./pokeball.png' alt='pokeball'/>\r\n                        <span style={ { 'paddingLeft': '0.5em' } }>Pokemon Team Builder</span>\r\n                    </span>\r\n                    <button className={ this.state.active ? 'navbar-burger button is-active' : 'navbar-burger button' }\r\n                            aria-label=\"menu\"\r\n                            aria-expanded=\"false\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        <span aria-hidden=\"true\"/>\r\n                        <span aria-hidden=\"true\"/>\r\n                        <span aria-hidden=\"true\"/>\r\n                    </button>\r\n                </div>\r\n                <div id=\"header\" className={ this.state.active ? 'navbar-menu is-active' : 'navbar-menu' }>\r\n                    <div className='navbar-start' style={ { 'justifyContent': 'space-between' } }>\r\n                        <TypeFilter/>\r\n                        <GameFilter/>\r\n                        <GenerationFilter/>\r\n                        <SearchFilter/>\r\n                        <CoverageFilter/>\r\n                        <ResetFilters/>\r\n                    </div>\r\n                    <div className='navbar-end'>\r\n                        <PartiesLink/>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Party from \"./Party\";\r\nimport Navbar from \"./navbar\";\r\nimport '../../styles/header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <span>\r\n            <Navbar/>\r\n            <div className='party'>\r\n                <Party/>\r\n            </div>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default connect()(Header);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon.all,\r\n});\r\n\r\nconst Footer = (props) => {\r\n    return props.pokemon.length > 0 ? (<footer className=\"text-center\">\r\n        <div className=\"columns\" style={ { 'position': 'absolute', 'bottom': 0, 'width': '100%' } }>\r\n            <span className=\"column\">&copy; of bgoff1</span>\r\n            <span className=\"column\">Pokémon info and images fetched from PokeAPI</span>\r\n            <span className=\"column\">Pokémon is &copy; of Nintendo, 1995-2019</span>\r\n        </div>\r\n    </footer>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Body from './Body';\r\nimport Header from \"./Header\";\r\nimport Footer from './Body/Footer';\r\n\r\nconst Page = () => {\r\n    return (\r\n        <div style={ { 'position': 'relative', 'minHeight': '100vh' } }>\r\n            <Header/>\r\n            <Body/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Page);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { removeParty } from \"../actions\";\r\nimport { getImageSource } from \"../utils/pokemon\";\r\n\r\nconst mapStateToProps = state => ({\r\n    savedParties: state.savedParties,\r\n    pokemon: state.pokemon\r\n});\r\n\r\nclass Parties extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        for (const party of this.props.savedParties.parties) {\r\n            while (party.length < 6) {\r\n                party.push('');\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(partyIndex) {\r\n        this.props.dispatch(removeParty(this.props.savedParties.parties[ partyIndex ]));\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this && this.props && this.props.savedParties && this.props.pokemon) {\r\n            const pokemon = this.props.pokemon.all.concat(this.props.pokemon.party);\r\n            const div = <div>&nbsp;</div>;\r\n            const parties = this.props.savedParties.parties;\r\n            return (\r\n                <div>\r\n                    { parties.map((party, partyIndex) => {\r\n                            return <div className='text-center' key={ partyIndex }>\r\n                                { party.map((value, index) => {\r\n                                    const poke = pokemon.find((each) => each.name === value);\r\n                                    if (!poke) {\r\n                                        return <span style={ { 'display': 'inline-block' } } key={ index }\r\n                                                     onClick={ () => this.onClick(partyIndex) }><span\r\n                                            className='empty'/>{ div }{ div }<br/></span>\r\n                                    }\r\n                                    let className;\r\n                                    let types;\r\n                                    if (poke.types.length === 1) {\r\n                                        className = `circle ${ poke.types[ 0 ] }`;\r\n                                        types = (<span className={ 'type ' + poke.types[ 0 ] }>\r\n                                                    { poke.types[ 0 ] }\r\n                                                </span>);\r\n                                    } else {\r\n                                        className = `circle ${ poke.types[ 1 ] }-main ${ poke.types[ 0 ] }-secondary`;\r\n                                        types = (<span><span className={ 'type ' + poke.types[ 1 ] }>\r\n                                                    { poke.types[ 1 ] }\r\n                                                    </span><span className={ 'type ' + poke.types[ 0 ] }>\r\n                                                    { poke.types[ 0 ] }\r\n                                                </span></span>);\r\n                                    }\r\n                                    return (\r\n                                        <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                                            <img className={ className }\r\n                                                 src={ getImageSource(poke) }\r\n                                                 alt={ poke.name } width={ '96px' } height={ '96px' }\r\n                                                 onClick={ () => this.onClick(partyIndex) }/>\r\n                                            <div className='name'>{ poke.name }</div>\r\n                                            <div>{ types }</div><br/>\r\n                                        </span>\r\n                                    )\r\n                                }) }</div>\r\n                        }\r\n                    ) }\r\n                </div>\r\n            );\r\n        }\r\n        return <span/>\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Parties);\r\n","import types from \"../utils/types\";\r\n\r\nconst initialState = {};\r\nfor (const type of types) {\r\n    initialState[ type ] = true;\r\n}\r\nconst typeFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_TYPE_FILTER':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type) && type === action.typeToFlip) {\r\n                    state[ type ] = !state[ type ];\r\n                    break;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'FLIP_ALL_TYPE_FILTER_TRUE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[ type ] = true;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'FLIP_ALL_TYPE_FILTER_FALSE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[ type ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'RESET_ALL_FILTERS':\r\n            for (const type of types) {\r\n                state[ type ] = true;\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default typeFilter\r\n","const generations = [ 1, 2, 3, 4, 5, 6, 7 ];\r\n\r\nconst initialState = {};\r\nfor (const type of generations) {\r\n    initialState[ type ] = true;\r\n}\r\nconst generationFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GEN_FILTER':\r\n            for (const generation in state) {\r\n                if (state.hasOwnProperty(generation) && generation === action.generationToFlip) {\r\n                    state[ generation ] = !state[ generation ];\r\n                    break;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'RESET_ALL_FILTERS':\r\n            for (const type of generations) {\r\n                state[type] = true;\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default generationFilter;\r\n","import { getPartyTypes, isAPartyMemberStrong } from '../utils/';\r\n\r\nconst insertPokemon = (state, pokemon) => {\r\n    const all = state.all;\r\n    let index = 0;\r\n    if (all.find(x => x.name === pokemon.name)) {\r\n        return { ...state };\r\n    }\r\n    for (const poke of all) {\r\n        if (poke.number > index && poke.number < pokemon.number) {\r\n            index = state.all.indexOf(poke) + 1;\r\n            if (index === pokemon.number - 1) break;\r\n        }\r\n    }\r\n    all.splice(index, 0, pokemon);\r\n    return { ...state, all };\r\n};\r\n\r\nconst initialState = {\r\n    all: [],\r\n    party: [],\r\n    checkingParty: false,\r\n    lackingCoverage: [],\r\n    searchFilter: ''\r\n};\r\nconst pokemon = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'ADD_POKEMON_BULK':\r\n                if (action.pokemon) {\r\n                    const all = action.pokemon;\r\n                    return {\r\n                        ...state,\r\n                        all\r\n                    };\r\n                } else return { ...state };\r\n            case 'ADD_TO_PARTY':\r\n                if (action.pokemon) {\r\n                    const party = state.party;\r\n                    for (const poke of state.all) {\r\n                        if (poke.name === action.pokemon.name) {\r\n                            party.push(poke);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return { ...state, party };\r\n                } else return { ...state };\r\n            case 'REMOVE_FROM_PARTY':\r\n                if (action.index || action.index === 0) {\r\n                    const party = state.party;\r\n                    party.splice(action.index, 1);\r\n                    return { ...state, party };\r\n                }\r\n                return { ...state };\r\n            case 'ADD_POKEMON':\r\n                if (action.pokemon) {\r\n                    return insertPokemon(state, action.pokemon);\r\n                } else return { ...state };\r\n            case 'REMOVE_POKEMON':\r\n                if (action.index || action.index === 0) {\r\n                    let all = state.all;\r\n                    all.splice(action.index, 1);\r\n                    return { ...state, all };\r\n                }\r\n                return { ...state };\r\n            case 'CHECK_PARTY':\r\n                if (state.checkingParty) {\r\n                    state.checkingParty = false;\r\n                    state.lackingCoverage = [];\r\n                    return { ...state };\r\n                }\r\n                if (state.party.length === 0) {\r\n                    return { ...state };\r\n                }\r\n                state.checkingParty = true;\r\n                let partyTypes = getPartyTypes(state.party);\r\n                for (const pokemon of state.all) {\r\n                    if (!isAPartyMemberStrong(partyTypes, pokemon)) {\r\n                        state.lackingCoverage.push(pokemon);\r\n                    }\r\n                }\r\n                return { ...state };\r\n            case 'RESET_ALL_FILTERS':\r\n                state.checkingParty = false;\r\n                state.lackingCoverage = [];\r\n                state.searchFilter = '';\r\n                return { ...state };\r\n            case 'CLEAR_PARTY':\r\n                state.party = [];\r\n                for (const partyMember of action.members) {\r\n                    state = insertPokemon(state, partyMember);\r\n                }\r\n                return { ...state };\r\n            case 'UPDATE_SEARCH_FILTER':\r\n                state.searchFilter = action.searchFilter;\r\n                return { ...state };\r\n            default:\r\n                return { ...state };\r\n        }\r\n    }\r\n;\r\n\r\nexport default pokemon;\r\n","const initialState = {\r\n    parties: []\r\n};\r\nconst savedParties = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_PARTY':\r\n            if (action.party) {\r\n                console.log('state', state.parties);\r\n                console.log('action', action.party);\r\n                const parties = state.parties;\r\n                parties.push(action.party);\r\n                return {...state, parties};\r\n            }\r\n            return { ...state };\r\n        case 'REMOVE_PARTY':\r\n            if (action.party) {\r\n                const parties = state.parties.filter(item => item !== action.party);\r\n                return {...state, parties };\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default savedParties;\r\n","import { combineReducers } from 'redux';\r\nimport typeFilter from './typeFilter';\r\nimport generationFilter from './generationFilter';\r\nimport gameFilter from './gameFilter';\r\nimport pokemon from \"./pokemon\";\r\nimport savedParties from './savedParties';\r\n\r\nexport default combineReducers({\r\n    typeFilter,\r\n    generationFilter,\r\n    gameFilter,\r\n    pokemon,\r\n    savedParties\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport reducer from './reducers/';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nexport default () => {\r\n    const persistConfig = {\r\n        key: 'root',\r\n        storage,\r\n        stateReconciler: hardSet\r\n    };\r\n\r\n    const persistedReducer = persistReducer(persistConfig, reducer);\r\n    // noinspection JSUnresolvedVariable\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(persistedReducer, composeEnhancers(\r\n        applyMiddleware(thunkMiddleware)\r\n    ));\r\n    const persistor = persistStore(store);\r\n    return { store, persistor };\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport Page from \"./components/Page\";\r\nimport Parties from './components/Parties';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport createStore from './createStore';\r\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nconst { store, persistor } = createStore();\r\n\r\n\r\nconst App = () => (\r\n    <Provider store={ store }>\r\n        <PersistGate loading={ null } persistor={ persistor }>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={ Page }/>\r\n                    <Route path=\"/parties\" component={ Parties }/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </Router>\r\n        </PersistGate>\r\n    </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}