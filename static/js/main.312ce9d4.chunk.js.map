{"version":3,"sources":["utils/types.js","reducers/typeFilter.jsx","reducers/generationFilter.jsx","reducers/gameFilter.jsx","reducers/pokemon.jsx","reducers/index.jsx","utils/index.js","utils/map.js","actions/index.jsx","components/Body/Pokemon.jsx","components/Body/LeftSideBar.jsx","components/Body/RightSideBar.jsx","components/Body/index.jsx","components/Header/Party.jsx","components/Header/LeftHeader.jsx","components/Header/RightHeader.jsx","components/Header/MiddleHeader.jsx","components/Header/navbar.jsx","components/Header/index.jsx","components/Page.jsx","App.jsx","serviceWorker.js","index.js"],"names":["types","initialState","typeFilter_step","typeFilter_iterator","Symbol","iterator","typeFilter_iteratorNormalCompletion","next","done","type","value","typeFilter","state","arguments","length","undefined","action","hasOwnProperty","typeToFlip","Object","objectSpread","generations","_i","generationFilter","generation","generationToFlip","games","gameFilter_i","isGameFilter","filter","gameFilter","game","gameToFlip","all","party","pokemon","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","poke","name","push","err","return","index","splice","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","number","indexOf","combineReducers","url","map","addHalf","listOfHalfEffective","item","set","addDouble","listOfDoubleEffective","Map","normal","addNormal","fire","addFire","water","addWater","electric","addElectric","grass","addGrass","ice","addIce","fighting","addFighting","poison","addPoison","ground","addGround","flying","addFlying","psychic","addPsychic","bug","addBug","rock","addRock","ghost","addGhost","dragon","addDragon","dark","addDark","steel","addSteel","fairy","addFairy","addAll","createMap","isStrongAgainst","pokemonType","get","has","isWeakAgainst","type1","isFilter","props","addPokemonToStore","View","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","fetch","concat","then","response","json","i","pokemonNumber","addPokemonToParty","region","findIndex","result","gameFilterToAcronym","_this2","p","includes","getArrayFromMap","Number","parseInt","sort","a","b","locations","_this3","react_default","createElement","className","image","src","alt","width","height","onClick","key","title","React","Component","connect","LeftSideBar","count","style","marginLeft","textAlign","val","findStrengthCount","RightSideBar","findWeaknessCount","display","Body_LeftSideBar","Body_Pokemon","Body_RightSideBar","Party","removePokemonFromParty","addPokemonToGrid","setUp","div","LeftHeader","checked","selected","checkedName","checkBox","data-toggle","aria-haspopup","aria-expanded","toggleAll","getNames","onChange","check","defaultChecked","addRegionalName","gen","MiddleHeader","right","left","Navbar","data-target","aria-controls","aria-label","id","Header_LeftHeader","margin-right","Header_MiddleHeader","RightHeader","navbar","Header_Party","components_Header","components_Body","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunkMiddleware","App","es","components_Page","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.312ce9d4.chunk.js","sourcesContent":["export default [\r\n    'Normal',\r\n    'Fire',\r\n    'Water',\r\n    'Electric',\r\n    'Grass',\r\n    'Ice',\r\n    'Fighting',\r\n    'Poison',\r\n    'Ground',\r\n    'Flying',\r\n    'Psychic',\r\n    'Bug',\r\n    'Rock',\r\n    'Ghost',\r\n    'Dragon',\r\n    'Dark',\r\n    'Steel',\r\n    'Fairy'\r\n];\r\n","import types from \"../utils/types\";\r\n\r\nconst initialState = {};\r\nfor (const type of types) {\r\n    initialState[type] = true;\r\n}\r\nconst typeFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_TYPE_FILTER':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type) && type === action.typeToFlip) {\r\n                    state[type] = !state[type];\r\n                    break;\r\n                }\r\n            }\r\n            return {...state};\r\n        case 'FLIP_ALL_TYPE_FILTER_TRUE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[type] = true;\r\n                }\r\n            }\r\n            return {...state};\r\n        case 'FLIP_ALL_TYPE_FILTER_FALSE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[type] = false;\r\n                }\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default typeFilter","const generations = [1,2,3,4,5,6,7];\r\n\r\nconst initialState = {};\r\nfor (const type of generations) {\r\n    initialState[type] = true;\r\n}\r\nconst generationFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GEN_FILTER':\r\n            for (const generation in state) {\r\n                if (state.hasOwnProperty(generation) && generation === action.generationToFlip) {\r\n                    state[generation] = !state[generation];\r\n                    break;\r\n                }\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default generationFilter;\r\n","const games = [\r\n    'Red | Blue | Yellow',\r\n    'Gold | Silver | Crystal',\r\n    'Ruby | Sapphire | Emerald',\r\n    'Diamond | Pearl',\r\n    'Platinum',\r\n    'HeartGold | SoulSilver',\r\n    'Black | White',\r\n    'Black 2 | White 2',\r\n    'X | Y',\r\n    'Omega Ruby | Alpha Sapphire',\r\n    'Sun | Moon',\r\n    'Ultra Sun | Ultra Moon'\r\n];\r\n\r\nconst initialState = {};\r\nfor (const type of games) {\r\n    initialState[ type ] = false;\r\n}\r\n\r\nexport function isGameFilter(state) {\r\n    for (const filter in state) {\r\n        if (state[ filter ]) return filter;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst gameFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GAME_FILTER':\r\n            const filter = isGameFilter(state);\r\n            if (filter) {\r\n                for (const game in state) {\r\n                    state[ game ] = false;\r\n                }\r\n                if (filter !== action.gameToFlip) {\r\n                    for (const game in state) {\r\n                        state[ game ] = game === action.gameToFlip;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const game in state) {\r\n                    state[ game ] = game === action.gameToFlip;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'SET_ALL_GAMES_OFF':\r\n            for (const game in state) {\r\n                if (state.hasOwnProperty(game)) {\r\n                    state[ game ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default gameFilter;\r\n","const initialState = {\r\n    all: [],\r\n    party: []\r\n};\r\nconst pokemon = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'ADD_POKEMON_BULK':\r\n                if (action.pokemon) {\r\n                    const all = action.pokemon;\r\n                    return {\r\n                        ...state,\r\n                        all\r\n                    };\r\n                } else return { ...state };\r\n            case 'ADD_TO_PARTY':\r\n                if (action.pokemon) {\r\n                    const party = state.party;\r\n                    for (const poke of state.all) {\r\n                        if (poke.name === action.pokemon.name) {\r\n                            party.push(poke);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return { ...state, party };\r\n                } else return { ...state };\r\n            case 'REMOVE_FROM_PARTY':\r\n                if (action.index || action.index === 0) {\r\n                    const party = state.party;\r\n                    party.splice(action.index, 1);\r\n                    return { ...state, party };\r\n                }\r\n                return { ...state };\r\n            case 'ADD_POKEMON':\r\n                if (action.pokemon) {\r\n                    const all = state.all;\r\n                    let index = 0;\r\n                    for (const poke of all) {\r\n                        if (poke.number > index && poke.number < action.pokemon.number) {\r\n                            index = state.all.indexOf(poke) + 1;\r\n                            if (index === action.pokemon.number - 1) break;\r\n                        }\r\n                    }\r\n                    all.splice(index, 0, action.pokemon);\r\n                    return { ...state, all };\r\n                } else return { ...state };\r\n            case 'REMOVE_POKEMON':\r\n                if (action.index || action.index === 0) {\r\n                    let all = state.all;\r\n                    all.splice(action.index, 1);\r\n                    return { ...state, all };\r\n                }\r\n                return { ...state };\r\n            default:\r\n                return { ...state };\r\n        }\r\n    }\r\n;\r\n\r\nexport default pokemon;","import { combineReducers } from 'redux';\r\nimport typeFilter from './typeFilter';\r\nimport generationFilter from './generationFilter';\r\nimport gameFilter from './gameFilter';\r\nimport pokemon from \"./pokemon\";\r\n\r\nexport default combineReducers({\r\n    typeFilter,\r\n    generationFilter,\r\n    gameFilter,\r\n    pokemon\r\n})\r\n","import { createMap } from './map';\r\n\r\nconst env = 'PROD';\r\n\r\nlet URL = '';\r\nif (env === 'DEV') {\r\n    URL = 'http://localhost:8000';\r\n} else {\r\n    URL = 'https://pure-caverns-33114.herokuapp.com';\r\n}\r\nexport const url = URL;\r\n\r\nconst map = createMap();\r\n\r\nexport function isStrongAgainst(pokemon, type) {\r\n    for (const pokemonType of pokemon.types) {\r\n        if (map.get(pokemonType).has(type) && map.get(pokemonType).get(type) === 2) return true;\r\n    }\r\n}\r\n\r\nexport function isWeakAgainst(pokemon, type) {\r\n    if (pokemon.types.length === 1) {\r\n        if (map.get(type).has(pokemon.types[ 0 ]) && map.get(type).get(pokemon.types[ 0 ]) === 2) {\r\n            return true;\r\n        }\r\n    } else {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const type1 = map.get(type).get(pokemon.types[0]);\r\n            if (map.get(type).has(pokemon.types[1])) {\r\n                const type2 = map.get(type).get(pokemon.types[1]);\r\n                if (type1 * type2 >= 2) return true;\r\n            } else if (type1 === 2) return true;\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isFilter(props) {\r\n    for (const filter in props.generationFilter) {\r\n        if (!props.generationFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.gameFilter) {\r\n        if (props.gameFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.typeFilter) {\r\n        if (!props.typeFilter[filter]) return true;\r\n    }\r\n    return false;\r\n}\r\n","export function createMap() {\r\n    function addNormal(map) {\r\n        const normal = new Map();\r\n        addHalf(['Rock', 'Steel'], normal);\r\n        normal.set('Ghost', 0);\r\n        map.set('Normal', normal);\r\n    }\r\n    function addFire(map) {\r\n        const fire = new Map();\r\n        addHalf(['Fire', 'Water', 'Rock', 'Dragon'], fire);\r\n        addDouble(['Grass', 'Ice', 'Bug', 'Steel'], fire);\r\n        map.set('Fire', fire);\r\n    }\r\n    function addWater(map) {\r\n        const water = new Map();\r\n        addDouble(['Fire', 'Ground', 'Rock'], water);\r\n        addHalf(['Water', 'Grass', 'Dragon'], water);\r\n        map.set('Water', water);\r\n    }\r\n    function addElectric(map) {\r\n        const electric = new Map();\r\n        addDouble(['Water', 'Flying'], electric);\r\n        addHalf(['Electric', 'Grass', 'Dragon'], electric);\r\n        electric.set('Ground', 0);\r\n        map.set('Electric', electric);\r\n    }\r\n    function addGrass(map) {\r\n        const grass = new Map();\r\n        addHalf(['Fire', 'Grass', 'Poison', 'Flying', 'Bug', 'Dragon', 'Steel'], grass);\r\n        addDouble(['Water', 'Ground', 'Rock'], grass);\r\n        map.set('Grass', grass);\r\n    }\r\n    function addIce(map) {\r\n        const ice = new Map();\r\n        addHalf(['Fire', 'Water', 'Ice', 'Steel'], ice);\r\n        addDouble(['Grass', 'Ground', 'Flying', 'Dragon'], ice);\r\n        map.set('Ice', ice);\r\n    }\r\n    function addFighting(map) {\r\n        const fighting = new Map();\r\n        addDouble(['Normal', 'Ice', 'Rock', 'Dark', 'Steel'], fighting);\r\n        addHalf(['Poison', 'Flying', 'Psychic', 'Bug', 'Fairy'], fighting);\r\n        fighting.set('Ghost', 0);\r\n        map.set('Fighting', fighting);\r\n    }\r\n    function addPoison(map) {\r\n        const poison = new Map();\r\n        addHalf(['Poison', 'Ground', 'Rock', 'Ghost'], poison);\r\n        addDouble(['Grass', 'Fairy'], poison);\r\n        poison.set('Steel', 0);\r\n        map.set('Poison', poison);\r\n    }\r\n    function addGround(map) {\r\n        const ground = new Map();\r\n        addHalf(['Grass', 'Bug'], ground);\r\n        addDouble(['Fire', 'Electric', 'Poison', 'Rock', 'Steel'], ground);\r\n        ground.set('Flying', 0);\r\n        map.set('Ground', ground);\r\n    }\r\n    function addFlying(map) {\r\n        const flying = new Map();\r\n        addHalf(['Electric', 'Rock', 'Steel'], flying);\r\n        addDouble(['Grass', 'Fighting', 'Bug'], flying);\r\n        map.set('Flying', flying);\r\n    }\r\n    function addPsychic(map) {\r\n        const psychic = new Map();\r\n        addHalf(['Psychic', 'Steel'], psychic);\r\n        addDouble(['Fighting', 'Poison'], psychic);\r\n        psychic.set('Dark', 0);\r\n        map.set('Psychic', psychic);\r\n    }\r\n    function addBug(map) {\r\n        const bug = new Map();\r\n        addHalf(['Fire', 'Fighting', 'Poison', 'Flying', 'Ghost', 'Steel', 'Fairy'], bug);\r\n        addDouble(['Grass', 'Psychic', 'Dark'], bug);\r\n        map.set('Bug', bug);\r\n    }\r\n    function addRock(map) {\r\n        const rock = new Map();\r\n        addDouble(['Fire', 'Ice', 'Flying', 'Bug'], rock);\r\n        addHalf(['Fighting', 'Ground', 'Steel'], rock);\r\n        map.set('Rock', rock);\r\n    }\r\n    function addGhost(map) {\r\n        const ghost = new Map();\r\n        ghost.set('Normal', 0);\r\n        addHalf(['Dark'], ghost);\r\n        addDouble(['Ghost', 'Psychic'], ghost);\r\n        map.set('Ghost', ghost);\r\n    }\r\n    function addDragon(map) {\r\n        const dragon = new Map();\r\n        addDouble(['Dragon'], dragon);\r\n        addHalf(['Steel'], dragon);\r\n        dragon.set('Fairy', 0);\r\n        map.set('Dragon', dragon);\r\n    }\r\n    function addDark(map) {\r\n        const dark = new Map();\r\n        addHalf(['Fighting', 'Dragon', 'Fairy'], dark);\r\n        addDouble(['Psychic', 'Ghost'], dark);\r\n        map.set('Dark', dark);\r\n    }\r\n    function addSteel(map) {\r\n        const steel = new Map();\r\n        addHalf(['Fire', 'Water', 'Electric', 'Steel'], steel);\r\n        addDouble(['Ice', 'Fairy'], steel);\r\n        map.set('Steel', steel);\r\n    }\r\n    function addFairy(map) {\r\n        const fairy = new Map();\r\n        addDouble(['Fighting', 'Dragon', 'Dark'], fairy);\r\n        addHalf(['Fire', 'Poison', 'Steel'], fairy);\r\n        map.set('Fairy', fairy);\r\n    }\r\n    function addAll() {\r\n        const map = new Map();\r\n        addNormal(map);\r\n        addFire(map);\r\n        addWater(map);\r\n        addElectric(map);\r\n        addGrass(map);\r\n        addIce(map);\r\n        addFighting(map);\r\n        addPoison(map);\r\n        addGround(map);\r\n        addFlying(map);\r\n        addPsychic(map);\r\n        addBug(map);\r\n        addRock(map);\r\n        addGhost(map);\r\n        addDragon(map);\r\n        addDark(map);\r\n        addSteel(map);\r\n        addFairy(map);\r\n        return map;\r\n    }\r\n    function addHalf(listOfHalfEffective, map) {\r\n        for (const item of listOfHalfEffective) {\r\n            map.set(item, 0.5);\r\n        }\r\n    }\r\n    function addDouble(listOfDoubleEffective, map) {\r\n        for (const item of listOfDoubleEffective) {\r\n            map.set(item, 2);\r\n        }\r\n    }\r\n\r\n    return addAll();\r\n}","import { url } from \"../utils\";\r\n\r\nexport const addPokemonToStore = pokemon => ({\r\n    type: 'ADD_POKEMON_BULK',\r\n    pokemon\r\n});\r\n\r\nexport const addPokemonToParty = pokemon => ({\r\n    type: 'ADD_TO_PARTY',\r\n    pokemon,\r\n});\r\n\r\nexport const removePokemonFromParty = index => ({\r\n    type: 'REMOVE_FROM_PARTY',\r\n    index\r\n});\r\n\r\nexport const addPokemonToGrid = pokemon => ({\r\n    type: 'ADD_POKEMON',\r\n    pokemon\r\n});\r\n\r\nexport const removePokemonFromGrid = index => ({\r\n    type: 'REMOVE_POKEMON',\r\n    index\r\n});\r\n\r\nexport const flipTypeFilter = typeToFlip => ({\r\n    type: 'FLIP_TYPE_FILTER',\r\n    typeToFlip\r\n});\r\n\r\nexport const flipGenerationFilter = generationToFlip => ({\r\n    type: 'FLIP_GEN_FILTER',\r\n    generationToFlip\r\n});\r\n\r\nexport const flipGameFilter = gameToFlip => ({\r\n   type: 'FLIP_GAME_FILTER',\r\n   gameToFlip\r\n});\r\n\r\nexport const turnOffAllGames = () => ({\r\n    type: 'SET_ALL_GAMES_OFF'\r\n});\r\n\r\nexport const flipAllTypesTrue = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_TRUE'\r\n});\r\n\r\nexport const flipAllTypesFalse = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_FALSE'\r\n});\r\n\r\nexport function getPokemon() {\r\n    return dispatch => {\r\n        return fetch(`${url}/pokemon`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(addPokemonToStore(json)))\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { getPokemon, addPokemonToParty, removePokemonFromGrid } from \"../../actions/index\";\r\nimport { isGameFilter } from '../../reducers/gameFilter';\r\nimport './Pokemon.css';\r\nimport { isFilter } from '../../utils/'\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party,\r\n    typeFilter: state.typeFilter,\r\n    generationFilter: state.generationFilter,\r\n    gameFilter: state.gameFilter\r\n});\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        props.dispatch(getPokemon());\r\n    }\r\n\r\n    findIndex(number, name) {\r\n        for (let i = 0; i < this.props.pokemon.all.length; i++) {\r\n            if (this.props.pokemon.all[ i ].pokemonNumber === number && name === this.props.pokemon.all[ i ].name) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(pokemon) {\r\n        if (this.props.pokemon.party.length !== 6) {\r\n            this.props.dispatch(addPokemonToParty({\r\n                name: pokemon.name,\r\n                types: pokemon.types,\r\n                pokemonNumber: pokemon.pokemonNumber,\r\n                region: pokemon.region,\r\n                generation: pokemon.generation\r\n            }));\r\n\r\n            this.props.dispatch(removePokemonFromGrid(this.findIndex(pokemon.pokemonNumber, pokemon.name)));\r\n        }\r\n    }\r\n\r\n    gameFilterToAcronym(gameFilter) {\r\n        switch (gameFilter) {\r\n            case 'Red | Blue | Yellow':\r\n                return 'RBY';\r\n            case 'Gold | Silver | Crystal':\r\n                return 'GSC';\r\n            case 'Ruby | Sapphire | Emerald':\r\n                return 'RSE';\r\n            case 'Diamond | Pearl':\r\n                return 'DP';\r\n            case 'Platinum':\r\n                return 'PT';\r\n            case 'HeartGold | SoulSilver':\r\n                return 'HGSS';\r\n            case 'Black | White':\r\n                return 'BW';\r\n            case 'Black 2 | White 2':\r\n                return 'BW2';\r\n            case 'X | Y':\r\n                return 'XY';\r\n            case 'Omega Ruby | Alpha Sapphire':\r\n                return 'ORAS';\r\n            case 'Sun | Moon':\r\n                return 'SM';\r\n            case 'Ultra Sun | Ultra Moon':\r\n                return 'USUM';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    getArrayFromMap(map) {\r\n        let result = [];\r\n        for (const i in map) {\r\n            if (map[ i ]) result.push(this.gameFilterToAcronym(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    filter() {\r\n        if (this.props && this.props.pokemon.all) {\r\n            return this.props.pokemon.all.filter(p => {\r\n                if (isGameFilter(this.props.gameFilter)) {\r\n                    if (!p.games.includes(this.getArrayFromMap(this.props.gameFilter)[ 0 ])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const generation in this.props.generationFilter) {\r\n                    if (this.props.generationFilter.hasOwnProperty(generation) && this.props.generationFilter[ generation ] === false\r\n                        && (p.hasOwnProperty('generation') && p.generation === Number.parseInt(generation))) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const type in this.props.typeFilter) {\r\n                    if (this.props.typeFilter.hasOwnProperty(type) && this.props.typeFilter[ type ] === true &&\r\n                        (p.types[ 0 ] === type || p.types[ 1 ] === type)) return true;\r\n                }\r\n                return false;\r\n            }).sort((a, b) => {\r\n                let filter = this.gameFilterToAcronym(isGameFilter(this.props.gameFilter));\r\n                if (filter) {\r\n                    return a.locations[ filter ] - b.locations[ filter ];\r\n                }\r\n                else if (a.hasOwnProperty('pokemonNumber') && b.hasOwnProperty('pokemonNumber')) {\r\n                    return a.pokemonNumber - b.pokemonNumber;\r\n                }\r\n                else return a - b;\r\n            });\r\n        } else return null;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.filter();\r\n        if (pokemon.length === 0 && !isFilter(this.props)) {\r\n            return <div className='still-loading'>\r\n                <div className='buffer'>\r\n                    <img src='./pokeball.png' alt='pokeball' className='pokeball img-fluid'/>\r\n                </div>\r\n            </div>\r\n        }\r\n        if (pokemon) {\r\n            return (\r\n                <div className='col-md-8 text-center'>\r\n                    {\r\n                        pokemon.map((poke, index) => {\r\n                            let className = poke.types.length === 1 ? `circle ${poke.types[ 0 ]}` : `circle ${poke.types[ 1 ]}-main ${poke.types[ 0 ]}-secondary`;\r\n                            const image = <img className={ className }\r\n                                               src={ `data:image/png;base64, ${poke.image}` }\r\n                                               alt={ poke.name } width={ '64px' } height={ '64px' }\r\n                                               onClick={ () => this.onClick(poke, index) }/>;\r\n                            return (<span key={ poke.name } title={ poke.name }>{ image }</span>);\r\n                        }) }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport './Pokemon.css';\r\nimport types from '../../utils/types';\r\nimport { isStrongAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass LeftSideBar extends React.Component {\r\n    findStrengthCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isStrongAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='col-md-2 strengths text-right'>\r\n                <div className='text-right'>Strengths:</div>\r\n                <table style={{'width': '100px', 'marginLeft': '65%', 'textAlign': 'left'}}>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>{ val }</td>\r\n                        <td>{ this.findStrengthCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport './Pokemon.css';\r\nimport types from '../../utils/types';\r\nimport { isWeakAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass RightSideBar extends React.Component {\r\n    findWeaknessCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isWeakAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='col-md-2 weaknesses text-left'>\r\n                <span className='text-center'>Weaknesses:</span>\r\n                <table style={{'width': '100px'}}>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>{ val }</td>\r\n                        <td>{ this.findWeaknessCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RightSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Pokemon from './Pokemon';\r\nimport LeftSideBar from \"./LeftSideBar\";\r\nimport RightSideBar from \"./RightSideBar\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div style={{'display': 'flex'}}>\r\n            <LeftSideBar />\r\n            <Pokemon/>\r\n            <RightSideBar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Body);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../Body/Pokemon.css';\r\nimport { addPokemonToGrid, removePokemonFromParty } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass Party extends React.Component {\r\n    static setUp(pokemon) {\r\n        let result = [];\r\n        for (const poke of pokemon) {\r\n            result.push(poke);\r\n        }\r\n        while (result.length < 6) {\r\n            result.push('empty');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onClick(pokemon, index) {\r\n        this.props.dispatch(removePokemonFromParty(index));\r\n        this.props.dispatch(addPokemonToGrid(pokemon));\r\n    }\r\n\r\n    render() {\r\n        const party = Party.setUp(this.props.pokemon.party);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            return null;\r\n        }\r\n        const div = <div>&nbsp;</div>;\r\n        return (\r\n            <div className='text-center'>\r\n                { party.map((value, index) => {\r\n                    if (value === 'empty') {\r\n                        return <span style={ { 'display': 'inline-block' } } key={ index }><span\r\n                            className='empty'/>{ div }{ div }<br/></span>\r\n                    }\r\n                    let className;\r\n                    if (value.types.length === 1) {\r\n                        className = `circle ${value.types[ 0 ]}`;\r\n                    } else {\r\n                        className = `circle ${value.types[ 1 ]}-main ${value.types[ 0 ]}-secondary`;\r\n                    }\r\n                    return <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                        <img className={ className } src={ `data:image/png;base64, ${value.image}` }\r\n                             alt={ value.name } width={ '96px' } height={ '96px' } onClick={() => this.onClick(value, index)}/>\r\n                        <div className='name'>\r\n                            { value.name }\r\n                        </div>\r\n                        <div>\r\n                            <span className={ 'type ' + value.types[ 1 ] }>\r\n                                { value.types[ 1 ] }\r\n                            </span>\r\n                            <span className={ 'type ' + value.types[ 0 ] }>\r\n                                { value.types[ 0 ] }\r\n                            </span>\r\n                        </div>\r\n                        <br/>\r\n                    </span>\r\n                }) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Party);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipAllTypesFalse, flipAllTypesTrue, flipTypeFilter } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    selected: state.typeFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked) && this.props.selected[checked] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 18) return 'All Types Selected';\r\n        if (count === 0) return 'No Types Selected';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.selected) {\r\n            if (checkBox === checkedName && this.props.selected[checkedName] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipTypeFilter(type));\r\n    }\r\n\r\n    toggleAll() {\r\n        if (this.count() === 'All Types Selected') {\r\n            this.props.dispatch(flipAllTypesFalse());\r\n        } else {\r\n            this.props.dispatch(flipAllTypesTrue());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col-md-4'>\r\n                    <div className=\"dropdown\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {<span>{this.count()}</span>}\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            <div key={ 'all' } className='ml-4'>\r\n                                <label className='checkbox'>\r\n                                    <button onClick={() => this.toggleAll()} >Select all</button>\r\n                                </label>\r\n                            </div>\r\n                            {this.getNames().map(val =>\r\n                                <div key={ val } className='ml-4'>\r\n                                    <label className='checkbox'>\r\n                                        <input type='checkbox' value={val} onChange={() => this.onChange(val)} checked={this.check(val)}/>\r\n                                        { val }\r\n                                    </label>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGenerationFilter } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked) && this.props.generations[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 7) return 'All Generations';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static addRegionalName(gen) {\r\n        switch (Number.parseInt(gen)) {\r\n            case 1:\r\n                return `${gen}: Kanto`;\r\n            case 2:\r\n                return `${gen}: Johto`;\r\n            case 3:\r\n                return `${gen}: Hoenn`;\r\n            case 4:\r\n                return `${gen}: Sinnoh`;\r\n            case 5:\r\n                return `${gen}: Unova`;\r\n            case 6:\r\n                return `${gen}: Kalos`;\r\n            case 7:\r\n                return `${gen}: Alola`;\r\n            default:\r\n                return gen;\r\n        }\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.generations) {\r\n            if (checkBox === checkedName && this.props.generations[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGenerationFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col-md-4'>\r\n                    <div className=\"dropdown float-right\">\r\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            { <span>{ this.count() }</span> }\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            { this.getNames().map(val =>\r\n                                <div key={ val } className='ml-4'>\r\n                                    <label className='checkbox'>\r\n                                        <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                               defaultChecked={ this.check(val) }/>\r\n                                        { LeftHeader.addRegionalName(val) }\r\n                                    </label>\r\n                                </div>) }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGameFilter } from \"../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    games: state.gameFilter\r\n});\r\n\r\nclass MiddleHeader extends React.Component {\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const game in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(game) && this.props.games[ game ] === true) {\r\n                return game;\r\n            }\r\n        }\r\n        if (count === 0) return 'All Games';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.games) {\r\n            if (checkedName === checkBox && this.props.games[ checkBox ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGameFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='col-md-4 text-center'>\r\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\r\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        { <span>{this.count()}</span> }\r\n                    </button>\r\n                    <div className=\"dropdown-menu\" style={ { 'right': 0, 'left': 0 } }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val } className='ml-4'>\r\n                                <label>\r\n                                <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                    checked={this.check(val)} />\r\n                                { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MiddleHeader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LeftHeader from \"./LeftHeader\";\r\nimport RightHeader from \"./RightHeader\";\r\nimport MiddleHeader from './MiddleHeader';\r\nimport { isFilter } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    all: state.pokemon,\r\n    party: state.party,\r\n    selected: state.typeFilter,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        if (!isFilter(this.props) && !this.props.all.all.length && !this.props.all.party.length) {\r\n            return <span/>;\r\n        }\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n                        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                    <LeftHeader style={{'margin-right': '50%'}}/>\r\n                    <MiddleHeader />\r\n                    <RightHeader />\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Party from \"./Party\";\r\nimport Navbar from \"./navbar\";\r\nimport './header.css';\r\nconst Header = () => {\r\n    return (\r\n        <span>\r\n            <Navbar/>\r\n            <div className='party'>\r\n                <Party/>\r\n            </div>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default connect()(Header);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Body from './Body/';\r\nimport Header from \"./Header/\";\r\n\r\nconst Page = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Body/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Page);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/';\nimport Page from \"./components/Page\";\nimport thunkMiddleware from 'redux-thunk';\n\n// noinspection JSUnresolvedVariable\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={ store }>\n                <Page />\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}