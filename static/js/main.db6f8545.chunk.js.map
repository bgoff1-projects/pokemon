{"version":3,"sources":["utils/index.js","utils/map.js","actions/index.jsx","reducers/gameFilter.jsx","utils/pokemon.js","components/Body/Pokemon.jsx","utils/types.js","components/Body/LeftSideBar.jsx","components/Body/RightSideBar.jsx","components/Body/index.jsx","components/Header/Party.jsx","components/Header/navbar/TypeFilter.jsx","components/Header/navbar/CoverageFilter.jsx","components/Header/navbar/GameFilter.jsx","components/Header/navbar/GenerationFilter.jsx","components/Header/navbar/PartiesLink.jsx","components/Header/navbar/ResetFilters.jsx","components/Header/navbar/index.jsx","components/Header/index.jsx","components/Body/Footer.jsx","components/Page.jsx","components/Parties.jsx","reducers/typeFilter.jsx","reducers/generationFilter.jsx","reducers/pokemon.jsx","reducers/savedParties.jsx","reducers/index.jsx","createStore.js","App.jsx","serviceWorker.js","index.js"],"names":["url","map","addHalf","listOfHalfEffective","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","set","err","return","addDouble","listOfDoubleEffective","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Map","normal","addNormal","fire","addFire","water","addWater","electric","addElectric","grass","addGrass","ice","addIce","fighting","addFighting","poison","addPoison","ground","addGround","flying","addFlying","psychic","addPsychic","bug","addBug","rock","addRock","ghost","addGhost","dragon","addDragon","dark","addDark","steel","addSteel","fairy","addFairy","addAll","createMap","isStrongAgainst","pokemon","type","types","pokemonType","get","has","isTypeStrongAgainst","len","length","effectiveness1","effectiveness2","isAPartyMemberStrong","partyTypes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","isWeakAgainst","type1","isFilter","props","filter","generationFilter","gameFilter","typeFilter","addPokemonToStore","games","initialState","_i","_games","isGameFilter","state","arguments","action","game","gameToFlip","Object","objectSpread","hasOwnProperty","_i2","_games2","getImageSource","poke","process","concat","pokemonNumber","name","includes","gameFilterToAcronym","View","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","all","dispatch","fetch","then","response","json","number","i","party","addPokemonToParty","region","generation","index","findIndex","_this2","checkingParty","lackingCoverage","p","result","push","getArrayFromMap","Number","parseInt","sort","a","b","locations","_this3","react_default","createElement","className","image","src","alt","width","height","onClick","key","title","React","Component","connect","utils_types","LeftSideBar","count","val","findStrengthCount","RightSideBar","findWeaknessCount","Body_LeftSideBar","Body_Pokemon","Body_RightSideBar","Party","removePokemonFromParty","addPokemonToGrid","newParty","partyMember","setUp","div","style","display","verticalAlign","paddingTop","saveParty","TypeFilter","active","checked","selected","checkedName","checkBox","typeToFlip","setState","toggleAll","getNames","onChange","check","CoverageFilter","handleClick","GameFilter","findToggledGame","members","LeftHeader","generations","generationToFlip","defaultChecked","addRegionalName","gen","PartiesLink","react_router_dom","to","ResetFilters","Navbar","role","paddingLeft","aria-label","aria-expanded","aria-hidden","id","justifyContent","navbar_TypeFilter","navbar_GameFilter","GenerationFilter","navbar_CoverageFilter","navbar_ResetFilters","PartiesLink_PartiesLink","navbar","Header_Party","position","bottom","minHeight","components_Header","components_Body","Body_Footer","Parties","savedParties","parties","partyIndex","find","each","typeFilter_step","typeFilter_iterator","typeFilter_iteratorNormalCompletion","generationFilter_i","_generations","_generations2","insertPokemon","x","indexOf","splice","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getPartyTypes","console","log","combineReducers","persistConfig","storage","stateReconciler","hardSet","persistedReducer","persistReducer","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","App","es","integration_react","loading","basename","react_router","exact","path","component","Page","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db6f8545.chunk.js","sourcesContent":["import { createMap } from './map';\r\n\r\nconst env = 'PROD';\r\n\r\nlet URL = '';\r\nif (env === 'DEV') {\r\n    URL = 'http://localhost:8000';\r\n} else {\r\n    URL = 'https://pure-caverns-33114.herokuapp.com';\r\n}\r\nexport const url = URL;\r\n\r\nconst map = createMap();\r\n\r\nexport function isStrongAgainst(pokemon, type) {\r\n    for (const pokemonType of pokemon.types) {\r\n        if (map.get(pokemonType).has(type) && map.get(pokemonType).get(type) === 2) return true;\r\n    }\r\n}\r\n\r\nexport function isTypeStrongAgainst(type, pokemon) {\r\n    const len = pokemon.types.length;\r\n    if (len !== 0) {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const effectiveness1 = map.get(type).get(pokemon.types[0]);\r\n            if (len === 1) return effectiveness1 === 2;\r\n            if (len === 2) {\r\n                if (map.get(type).has(pokemon.types[1])) {\r\n                    const effectiveness2 = map.get(type).get(pokemon.types[1]);\r\n                    if ((effectiveness1 === 2 && effectiveness2 >= 1) || (effectiveness2 === 2 && effectiveness1 >= 1)) return true;\r\n                } else if (effectiveness1 === 2) return true;\r\n            }\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPartyTypes(party) {\r\n    const result = [];\r\n    for (const partyMember of party) {\r\n        for (const type of partyMember.types) {\r\n            if (!result.includes(type)) {\r\n                result.push(type);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function isAPartyMemberStrong(partyTypes, pokemon) {\r\n    for (const type of partyTypes) {\r\n        if (isTypeStrongAgainst(type, pokemon)) { return true; }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isWeakAgainst(pokemon, type) {\r\n    if (pokemon.types.length === 1) {\r\n        if (map.get(type).has(pokemon.types[ 0 ]) && map.get(type).get(pokemon.types[ 0 ]) === 2) {\r\n            return true;\r\n        }\r\n    } else {\r\n        if (map.get(type).has(pokemon.types[0])) {\r\n            const type1 = map.get(type).get(pokemon.types[0]);\r\n            if (map.get(type).has(pokemon.types[1])) {\r\n                const type2 = map.get(type).get(pokemon.types[1]);\r\n                if (type1 * type2 >= 2) return true;\r\n            } else if (type1 === 2) return true;\r\n        } else if (map.get(type).has(pokemon.types[1])) {\r\n            if (map.get(type).get(pokemon.types[1]) === 2) return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function isFilter(props) {\r\n    for (const filter in props.generationFilter) {\r\n        if (!props.generationFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.gameFilter) {\r\n        if (props.gameFilter[ filter ]) return true;\r\n    }\r\n    for (const filter in props.typeFilter) {\r\n        if (!props.typeFilter[filter]) return true;\r\n    }\r\n    return false;\r\n}\r\n","export function createMap() {\r\n    function addNormal(map) {\r\n        const normal = new Map();\r\n        addHalf(['Rock', 'Steel'], normal);\r\n        normal.set('Ghost', 0);\r\n        map.set('Normal', normal);\r\n    }\r\n    function addFire(map) {\r\n        const fire = new Map();\r\n        addHalf(['Fire', 'Water', 'Rock', 'Dragon'], fire);\r\n        addDouble(['Grass', 'Ice', 'Bug', 'Steel'], fire);\r\n        map.set('Fire', fire);\r\n    }\r\n    function addWater(map) {\r\n        const water = new Map();\r\n        addDouble(['Fire', 'Ground', 'Rock'], water);\r\n        addHalf(['Water', 'Grass', 'Dragon'], water);\r\n        map.set('Water', water);\r\n    }\r\n    function addElectric(map) {\r\n        const electric = new Map();\r\n        addDouble(['Water', 'Flying'], electric);\r\n        addHalf(['Electric', 'Grass', 'Dragon'], electric);\r\n        electric.set('Ground', 0);\r\n        map.set('Electric', electric);\r\n    }\r\n    function addGrass(map) {\r\n        const grass = new Map();\r\n        addHalf(['Fire', 'Grass', 'Poison', 'Flying', 'Bug', 'Dragon', 'Steel'], grass);\r\n        addDouble(['Water', 'Ground', 'Rock'], grass);\r\n        map.set('Grass', grass);\r\n    }\r\n    function addIce(map) {\r\n        const ice = new Map();\r\n        addHalf(['Fire', 'Water', 'Ice', 'Steel'], ice);\r\n        addDouble(['Grass', 'Ground', 'Flying', 'Dragon'], ice);\r\n        map.set('Ice', ice);\r\n    }\r\n    function addFighting(map) {\r\n        const fighting = new Map();\r\n        addDouble(['Normal', 'Ice', 'Rock', 'Dark', 'Steel'], fighting);\r\n        addHalf(['Poison', 'Flying', 'Psychic', 'Bug', 'Fairy'], fighting);\r\n        fighting.set('Ghost', 0);\r\n        map.set('Fighting', fighting);\r\n    }\r\n    function addPoison(map) {\r\n        const poison = new Map();\r\n        addHalf(['Poison', 'Ground', 'Rock', 'Ghost'], poison);\r\n        addDouble(['Grass', 'Fairy'], poison);\r\n        poison.set('Steel', 0);\r\n        map.set('Poison', poison);\r\n    }\r\n    function addGround(map) {\r\n        const ground = new Map();\r\n        addHalf(['Grass', 'Bug'], ground);\r\n        addDouble(['Fire', 'Electric', 'Poison', 'Rock', 'Steel'], ground);\r\n        ground.set('Flying', 0);\r\n        map.set('Ground', ground);\r\n    }\r\n    function addFlying(map) {\r\n        const flying = new Map();\r\n        addHalf(['Electric', 'Rock', 'Steel'], flying);\r\n        addDouble(['Grass', 'Fighting', 'Bug'], flying);\r\n        map.set('Flying', flying);\r\n    }\r\n    function addPsychic(map) {\r\n        const psychic = new Map();\r\n        addHalf(['Psychic', 'Steel'], psychic);\r\n        addDouble(['Fighting', 'Poison'], psychic);\r\n        psychic.set('Dark', 0);\r\n        map.set('Psychic', psychic);\r\n    }\r\n    function addBug(map) {\r\n        const bug = new Map();\r\n        addHalf(['Fire', 'Fighting', 'Poison', 'Flying', 'Ghost', 'Steel', 'Fairy'], bug);\r\n        addDouble(['Grass', 'Psychic', 'Dark'], bug);\r\n        map.set('Bug', bug);\r\n    }\r\n    function addRock(map) {\r\n        const rock = new Map();\r\n        addDouble(['Fire', 'Ice', 'Flying', 'Bug'], rock);\r\n        addHalf(['Fighting', 'Ground', 'Steel'], rock);\r\n        map.set('Rock', rock);\r\n    }\r\n    function addGhost(map) {\r\n        const ghost = new Map();\r\n        ghost.set('Normal', 0);\r\n        addHalf(['Dark'], ghost);\r\n        addDouble(['Ghost', 'Psychic'], ghost);\r\n        map.set('Ghost', ghost);\r\n    }\r\n    function addDragon(map) {\r\n        const dragon = new Map();\r\n        addDouble(['Dragon'], dragon);\r\n        addHalf(['Steel'], dragon);\r\n        dragon.set('Fairy', 0);\r\n        map.set('Dragon', dragon);\r\n    }\r\n    function addDark(map) {\r\n        const dark = new Map();\r\n        addHalf(['Fighting', 'Dragon', 'Fairy'], dark);\r\n        addDouble(['Psychic', 'Ghost'], dark);\r\n        map.set('Dark', dark);\r\n    }\r\n    function addSteel(map) {\r\n        const steel = new Map();\r\n        addHalf(['Fire', 'Water', 'Electric', 'Steel'], steel);\r\n        addDouble(['Ice', 'Fairy'], steel);\r\n        map.set('Steel', steel);\r\n    }\r\n    function addFairy(map) {\r\n        const fairy = new Map();\r\n        addDouble(['Fighting', 'Dragon', 'Dark'], fairy);\r\n        addHalf(['Fire', 'Poison', 'Steel'], fairy);\r\n        map.set('Fairy', fairy);\r\n    }\r\n    function addAll() {\r\n        const map = new Map();\r\n        addNormal(map);\r\n        addFire(map);\r\n        addWater(map);\r\n        addElectric(map);\r\n        addGrass(map);\r\n        addIce(map);\r\n        addFighting(map);\r\n        addPoison(map);\r\n        addGround(map);\r\n        addFlying(map);\r\n        addPsychic(map);\r\n        addBug(map);\r\n        addRock(map);\r\n        addGhost(map);\r\n        addDragon(map);\r\n        addDark(map);\r\n        addSteel(map);\r\n        addFairy(map);\r\n        return map;\r\n    }\r\n    function addHalf(listOfHalfEffective, map) {\r\n        for (const item of listOfHalfEffective) {\r\n            map.set(item, 0.5);\r\n        }\r\n    }\r\n    function addDouble(listOfDoubleEffective, map) {\r\n        for (const item of listOfDoubleEffective) {\r\n            map.set(item, 2);\r\n        }\r\n    }\r\n\r\n    return addAll();\r\n}","import { url } from \"../utils\";\r\n\r\nexport const addPokemonToStore = pokemon => ({\r\n    type: 'ADD_POKEMON_BULK',\r\n    pokemon\r\n});\r\n\r\nexport const checkCoverage = () => ({\r\n    type: 'CHECK_PARTY'\r\n});\r\n\r\nexport const addPokemonToParty = pokemon => ({\r\n    type: 'ADD_TO_PARTY',\r\n    pokemon,\r\n});\r\n\r\nexport const removePokemonFromParty = index => ({\r\n    type: 'REMOVE_FROM_PARTY',\r\n    index\r\n});\r\n\r\nexport const addPokemonToGrid = pokemon => ({\r\n    type: 'ADD_POKEMON',\r\n    pokemon\r\n});\r\n\r\nexport const removePokemonFromGrid = index => ({\r\n    type: 'REMOVE_POKEMON',\r\n    index\r\n});\r\n\r\nexport const flipTypeFilter = typeToFlip => ({\r\n    type: 'FLIP_TYPE_FILTER',\r\n    typeToFlip\r\n});\r\n\r\nexport const flipGenerationFilter = generationToFlip => ({\r\n    type: 'FLIP_GEN_FILTER',\r\n    generationToFlip\r\n});\r\n\r\nexport const flipGameFilter = gameToFlip => ({\r\n   type: 'FLIP_GAME_FILTER',\r\n   gameToFlip\r\n});\r\n\r\nexport const turnOffAllGames = () => ({\r\n    type: 'SET_ALL_GAMES_OFF'\r\n});\r\n\r\nexport const flipAllTypesTrue = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_TRUE'\r\n});\r\n\r\nexport const flipAllTypesFalse = () => ({\r\n    type: 'FLIP_ALL_TYPE_FILTER_FALSE'\r\n});\r\n\r\nexport const saveParty = (party) => ({\r\n    type: 'SAVE_PARTY',\r\n    party\r\n});\r\n\r\nexport const removeParty = (party) => ({\r\n    type: 'REMOVE_PARTY',\r\n    party\r\n});\r\n\r\nexport const resetAllFilters = () => ({\r\n    type: 'RESET_ALL_FILTERS'\r\n});\r\n\r\nexport const clearParty = (members) => ({\r\n    type: 'CLEAR_PARTY',\r\n    members\r\n});\r\n\r\nexport function getPokemon() {\r\n    return dispatch => {\r\n        return fetch(`${url}/pokemon`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(addPokemonToStore(json)))\r\n    }\r\n}\r\n","export const games = [\r\n    'Red | Blue | Yellow',\r\n    'Gold | Silver | Crystal',\r\n    'Ruby | Sapphire | Emerald',\r\n    'Diamond | Pearl',\r\n    'Platinum',\r\n    'HeartGold | SoulSilver',\r\n    'Black | White',\r\n    'Black 2 | White 2',\r\n    'X | Y',\r\n    'Omega Ruby | Alpha Sapphire',\r\n    'Sun | Moon',\r\n    'Ultra Sun | Ultra Moon'\r\n];\r\n\r\nconst initialState = {};\r\n\r\nfor (const type of games) {\r\n    initialState[ type ] = false;\r\n}\r\n\r\nexport function isGameFilter(state) {\r\n    for (const filter in state) {\r\n        if (state[ filter ]) return filter;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst gameFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GAME_FILTER':\r\n            const filter = isGameFilter(state);\r\n            if (filter) {\r\n                for (const game in state) {\r\n                    state[ game ] = false;\r\n                }\r\n                if (filter !== action.gameToFlip) {\r\n                    for (const game in state) {\r\n                        state[ game ] = game === action.gameToFlip;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const game in state) {\r\n                    state[ game ] = game === action.gameToFlip;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'SET_ALL_GAMES_OFF':\r\n            for (const game in state) {\r\n                if (state.hasOwnProperty(game)) {\r\n                    state[ game ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'RESET_ALL_FILTERS':\r\n            for (const type of games) {\r\n                state[ type ] = false;\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default gameFilter;\r\n","export function getImageSource(poke) {\r\n    return process.env.PUBLIC_URL + `/images/${ poke.pokemonNumber + (poke.name.includes('Alolan ') || poke.name.includes('alolan ') ? '-alola' : '') }.png`\r\n}\r\nexport function gameFilterToAcronym(gameFilter) {\r\n    switch (gameFilter) {\r\n        case 'Red | Blue | Yellow':\r\n            return 'RBY';\r\n        case 'Gold | Silver | Crystal':\r\n            return 'GSC';\r\n        case 'Ruby | Sapphire | Emerald':\r\n            return 'RSE';\r\n        case 'Diamond | Pearl':\r\n            return 'DP';\r\n        case 'Platinum':\r\n            return 'PT';\r\n        case 'HeartGold | SoulSilver':\r\n            return 'HGSS';\r\n        case 'Black | White':\r\n            return 'BW';\r\n        case 'Black 2 | White 2':\r\n            return 'BW2';\r\n        case 'X | Y':\r\n            return 'XY';\r\n        case 'Omega Ruby | Alpha Sapphire':\r\n            return 'ORAS';\r\n        case 'Sun | Moon':\r\n            return 'SM';\r\n        case 'Ultra Sun | Ultra Moon':\r\n            return 'USUM';\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nexport function getArrayFromMap(map) {\r\n    let result = [];\r\n    for (const i in map) {\r\n        if (map[ i ]) result.push(gameFilterToAcronym(i));\r\n    }\r\n    return result;\r\n}\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { getPokemon, addPokemonToParty, removePokemonFromGrid } from \"../../actions\";\r\nimport { isGameFilter } from '../../reducers/gameFilter';\r\nimport '../../styles/Pokemon.scss';\r\nimport { isFilter } from '../../utils/'\r\nimport { gameFilterToAcronym, getArrayFromMap, getImageSource } from \"../../utils/pokemon\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party,\r\n    typeFilter: state.typeFilter,\r\n    generationFilter: state.generationFilter,\r\n    gameFilter: state.gameFilter\r\n});\r\n\r\nclass View extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            props.dispatch(getPokemon());\r\n        }\r\n    }\r\n\r\n    findIndex(number, name) {\r\n        for (let i = 0; i < this.props.pokemon.all.length; i++) {\r\n            if (this.props.pokemon.all[ i ].pokemonNumber === number && name === this.props.pokemon.all[ i ].name) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(pokemon) {\r\n        if (this.props.pokemon.party.length !== 6) {\r\n            this.props.dispatch(addPokemonToParty({\r\n                name: pokemon.name,\r\n                types: pokemon.types,\r\n                pokemonNumber: pokemon.pokemonNumber,\r\n                region: pokemon.region,\r\n                generation: pokemon.generation\r\n            }));\r\n\r\n            this.props.dispatch(removePokemonFromGrid(this.findIndex(pokemon.pokemonNumber, pokemon.name)));\r\n        }\r\n    }\r\n\r\n    filter() {\r\n        if (this.props && this.props.pokemon.all) {\r\n            const toFilter = this.props.pokemon.checkingParty ?\r\n                this.props.pokemon.lackingCoverage : this.props.pokemon.all;\r\n            return toFilter.filter(p => {\r\n                if (isGameFilter(this.props.gameFilter)) {\r\n                    if (!p.games.includes(getArrayFromMap(this.props.gameFilter)[ 0 ])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const generation in this.props.generationFilter) {\r\n                    if (this.props.generationFilter.hasOwnProperty(generation) && this.props.generationFilter[ generation ] === false\r\n                        && (p.hasOwnProperty('generation') && p.generation === Number.parseInt(generation))) {\r\n                        return false;\r\n                    }\r\n                }\r\n                for (const type in this.props.typeFilter) {\r\n                    if (this.props.typeFilter.hasOwnProperty(type) && this.props.typeFilter[ type ] === true &&\r\n                        (p.types[ 0 ] === type || p.types[ 1 ] === type)) return true;\r\n                }\r\n                return false;\r\n            }).sort((a, b) => {\r\n                let filter = gameFilterToAcronym(isGameFilter(this.props.gameFilter));\r\n                if (filter && a.locations.hasOwnProperty(filter) && b.locations.hasOwnProperty(filter)) {\r\n                    return a.locations[ filter ] - b.locations[ filter ];\r\n                } else if (a.hasOwnProperty('pokemonNumber') && b.hasOwnProperty('pokemonNumber')) {\r\n                    if (a.pokemonNumber === b.pokemonNumber) {\r\n                        return a.generation - b.generation;\r\n                    }\r\n                    return a.pokemonNumber - b.pokemonNumber;\r\n                } else return a - b;\r\n            });\r\n        } else return null;\r\n    }\r\n\r\n    render() {\r\n        let pokemon = this.filter();\r\n        if (pokemon.length === 0 && !isFilter(this.props)) {\r\n            return <div className='still-loading'>\r\n                <div className='buffer'>\r\n                    <img src='./pokeball.png' alt='pokeball' className='pokeball img-fluid'/>\r\n                </div>\r\n            </div>\r\n        }\r\n        if (pokemon) {\r\n            return (\r\n                <div className='column is-four-fifths text-center'>\r\n                    {\r\n                        pokemon.map((poke, index) => {\r\n                            let className = poke.types.length === 1 ? `circle ${ poke.types[ 0 ] }` : `circle ${ poke.types[ 1 ] }-main ${ poke.types[ 0 ] }-secondary`;\r\n                            const image = <img className={ className }\r\n                                               src={ getImageSource(poke) }\r\n                                               alt={ poke.name } width={ '64px' } height={ '64px' }\r\n                                               onClick={ () => this.onClick(poke, index) }/>;\r\n                            return (<span key={ poke.name } title={ poke.name }>{ image }</span>);\r\n                        }) }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","export default [\r\n    'Normal',\r\n    'Fire',\r\n    'Water',\r\n    'Electric',\r\n    'Grass',\r\n    'Ice',\r\n    'Fighting',\r\n    'Poison',\r\n    'Ground',\r\n    'Flying',\r\n    'Psychic',\r\n    'Bug',\r\n    'Rock',\r\n    'Ghost',\r\n    'Dragon',\r\n    'Dark',\r\n    'Steel',\r\n    'Fairy'\r\n];\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport types from '../../utils/types';\r\nimport { isStrongAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass LeftSideBar extends React.Component {\r\n    findStrengthCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isStrongAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='column text-center'>\r\n                <div className='type-table-header'>Strengths:</div>\r\n                <table className='text-center strengths'>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={ index }>\r\n                        <td>&nbsp;{ val }&nbsp;</td>\r\n                        <td>{ this.findStrengthCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport types from '../../utils/types';\r\nimport { isWeakAgainst } from \"../../utils\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass RightSideBar extends React.Component {\r\n    findWeaknessCount(type) {\r\n        if (this.props && this.props.pokemon) {\r\n            let count = 0;\r\n            for (const partyMember of this.props.pokemon.party) {\r\n                if (isWeakAgainst(partyMember, type)) count++;\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (<div className='column text-center'>\r\n                <span className='type-table-header'>Weaknesses:</span>\r\n                <table className='text-center weaknesses'>\r\n                    <tbody>\r\n                    { types.map((val, index) => <tr key={index}>\r\n                        <td>&nbsp;{ val }&nbsp;</td>\r\n                        <td>{ this.findWeaknessCount(val) }</td>\r\n                    </tr>) }\r\n                    </tbody>\r\n                </table>\r\n            </div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RightSideBar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Pokemon from './Pokemon';\r\nimport LeftSideBar from \"./LeftSideBar\";\r\nimport RightSideBar from \"./RightSideBar\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div className='columns'>\r\n            <LeftSideBar />\r\n            <Pokemon/>\r\n            <RightSideBar />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Body);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/type-colorings.scss';\r\nimport { addPokemonToGrid, removePokemonFromParty, saveParty } from \"../../actions\";\r\nimport { getImageSource } from \"../../utils/pokemon\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    party: state.party\r\n});\r\n\r\nclass Party extends React.Component {\r\n    static setUp(pokemon) {\r\n        let result = [];\r\n        for (const poke of pokemon) {\r\n            result.push(poke);\r\n        }\r\n        while (result.length < 6) {\r\n            result.push('empty');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onClick(pokemon, index) {\r\n        this.props.dispatch(removePokemonFromParty(index));\r\n        this.props.dispatch(addPokemonToGrid(pokemon));\r\n    }\r\n\r\n    saveParty() {\r\n        const newParty = [];\r\n        for (const partyMember of this.props.pokemon.party) {\r\n            newParty.push(partyMember.name);\r\n        }\r\n        this.props.dispatch(saveParty(newParty));\r\n    }\r\n\r\n\r\n    render() {\r\n        const party = Party.setUp(this.props.pokemon.party);\r\n        if (this.props.pokemon.all.length === 0) {\r\n            return null;\r\n        }\r\n        const div = <div>&nbsp;</div>;\r\n        return (\r\n            <div className='text-center'>\r\n                <span className='partyMembers rounded'>\r\n                { party.map((value, index) => {\r\n                    if (value === 'empty') {\r\n                        return <span style={ { 'display': 'inline-block' } } key={ index }><span\r\n                            className='empty'/>{ div }{ div }<br/></span>\r\n                    }\r\n                    let className;\r\n                    let types;\r\n                    if (value.types.length === 1) {\r\n                        className = `circle ${ value.types[ 0 ] }`;\r\n                        types = (<span className={ 'type ' + value.types[ 0 ] }>\r\n                            { value.types[ 0 ] }\r\n                        </span>);\r\n                    } else {\r\n                        className = `circle ${ value.types[ 1 ] }-main ${ value.types[ 0 ] }-secondary`;\r\n                        types = (<span><span className={ 'type ' + value.types[ 1 ] }>\r\n                                { value.types[ 1 ] }\r\n                            </span><span className={ 'type ' + value.types[ 0 ] }>\r\n                            { value.types[ 0 ] }\r\n                        </span></span>);\r\n                    }\r\n                    return <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                        <img className={ className } src={ getImageSource(value) }\r\n                             alt={ value.name } width={ '96px' } height={ '96px' }\r\n                             onClick={ () => this.onClick(value, index) }/>\r\n                        <div className='name'>\r\n                            { value.name }\r\n                        </div>\r\n                        <div>\r\n                            { types }\r\n                        </div>\r\n                        <br/>\r\n                    </span>\r\n                }) }\r\n                    <span style={ { 'verticalAlign': 'top', 'paddingTop': '.75em' } } className=\"icon\"\r\n                          onClick={ () => this.saveParty() } title='Save Pokemon Party'>\r\n                        <i className=\"fas fa-plus-circle pointer\"/>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Party);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipAllTypesFalse, flipAllTypesTrue, flipTypeFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    selected: state.typeFilter\r\n});\r\n\r\nclass TypeFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: true\r\n        }\r\n    }\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked) && this.props.selected[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 18) return 'All Types Selected';\r\n        if (count === 0) return 'No Types Selected';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.selected) {\r\n            if (this.props.selected.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.selected) {\r\n            if (checkBox === checkedName && this.props.selected[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipTypeFilter(type));\r\n    }\r\n\r\n    toggleAll() {\r\n        if (this.count() === 'All Types Selected') {\r\n            this.props.dispatch(flipAllTypesFalse());\r\n        } else {\r\n            this.props.dispatch(flipAllTypesTrue());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.count() }\r\n                    </span>\r\n                    <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                        <div key={ 'all' }>\r\n                            <label className='navbar-item'>\r\n                                <button className='button' onClick={ () => this.toggleAll() }>Select all</button>\r\n                            </label>\r\n                        </div>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val }>\r\n                                <label className='navbar-item'>\r\n                                    <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                           checked={ this.check(val) }/>\r\n                                    { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TypeFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { checkCoverage } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n});\r\n\r\nclass CoverageFilter extends React.Component {\r\n\r\n    handleClick() {\r\n        this.props.dispatch(checkCoverage());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar-item pointer' onClick={ () => this.handleClick() }>{ this.props.pokemon.checkingParty ? 'Showing Pokemon without Coverage' : 'Check Coverage'}</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(CoverageFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { clearParty, flipGameFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    games: state.gameFilter\r\n});\r\n\r\nclass GameFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        }\r\n    }\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const game in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(game) && this.props.games[ game ] === true) {\r\n                return game;\r\n            }\r\n        }\r\n        if (count === 0) return 'All Games';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.games) {\r\n            if (this.props.games.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.games) {\r\n            if (checkedName === checkBox && this.props.games[ checkBox ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findToggledGame() {\r\n        for (const game in this.props.games) {\r\n            if (this.props.games[ game ]) {\r\n                return game;\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange(type) {\r\n        if (this.findToggledGame() !== type && this.props.pokemon.party.length > 0) {\r\n            this.props.dispatch(clearParty(this.props.pokemon.party));\r\n        }\r\n        this.props.dispatch(flipGameFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.count() }\r\n                    </span>\r\n                    <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val }>\r\n                                <label className='navbar-item'>\r\n                                    <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                           checked={ this.check(val) }/>\r\n                                    { val }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameFilter);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { flipGenerationFilter } from \"../../../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass LeftHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        }\r\n    }\r\n\r\n\r\n    count() {\r\n        let count = 0;\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked) && this.props.generations[ checked ] === true) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count === 7) return 'All Generations';\r\n        return count + ' Selected';\r\n    }\r\n\r\n    getNames() {\r\n        let result = [];\r\n        for (const checked in this.props.generations) {\r\n            if (this.props.generations.hasOwnProperty(checked)) result.push(checked);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static addRegionalName(gen) {\r\n        switch (Number.parseInt(gen)) {\r\n            case 1:\r\n                return `${ gen }: Kanto`;\r\n            case 2:\r\n                return `${ gen }: Johto`;\r\n            case 3:\r\n                return `${ gen }: Hoenn`;\r\n            case 4:\r\n                return `${ gen }: Sinnoh`;\r\n            case 5:\r\n                return `${ gen }: Unova`;\r\n            case 6:\r\n                return `${ gen }: Kalos`;\r\n            case 7:\r\n                return `${ gen }: Alola`;\r\n            default:\r\n                return gen;\r\n        }\r\n    }\r\n\r\n    check(checkedName) {\r\n        for (const checkBox in this.props.generations) {\r\n            if (checkBox === checkedName && this.props.generations[ checkedName ] === true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onChange(type) {\r\n        this.props.dispatch(flipGenerationFilter(type));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.pokemon.all && this.props.pokemon.all.length !== 0) {\r\n            return (\r\n                <div className='navbar-item has-dropdown is-hoverable'>\r\n                    <span className=\"navbar-link\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        { this.count() }\r\n                    </span>\r\n                    <div className={ this.state.active ? 'navbar-dropdown is-active' : 'navbar-dropdown navbar-menu' }>\r\n                        { this.getNames().map(val =>\r\n                            <div key={ val }>\r\n                                <label className='navbar-item'>\r\n                                    <input type='checkbox' value={ val } onChange={ () => this.onChange(val) }\r\n                                           defaultChecked={ this.check(val) }/>\r\n                                    { LeftHeader.addRegionalName(val) }\r\n                                </label>\r\n                            </div>) }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeftHeader);\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class PartiesLink extends React.Component {\r\n    render() {\r\n        return <Link className='navbar-item pointer' to={'/parties'}>Saved Parties</Link>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { resetAllFilters } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon,\r\n});\r\n\r\nclass ResetFilters extends React.Component {\r\n\r\n    handleClick() {\r\n        this.props.dispatch(resetAllFilters());\r\n    }\r\n    render() {\r\n        return <div className='navbar-item pointer' onClick={() => this.handleClick()}>Reset All Filters</div>\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ResetFilters);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TypeFilter from './TypeFilter';\r\nimport CoverageFilter from './CoverageFilter';\r\nimport GameFilter from './GameFilter';\r\nimport GenerationFilter from './GenerationFilter';\r\nimport { isFilter } from '../../../utils';\r\nimport PartiesLink from \"./PartiesLink\";\r\nimport ResetFilters from \"./ResetFilters\";\r\n\r\nconst mapStateToProps = state => ({\r\n    all: state.pokemon,\r\n    party: state.party,\r\n    selected: state.typeFilter,\r\n    generations: state.generationFilter\r\n});\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (!isFilter(this.props) && !this.props.all.all.length && !this.props.all.party.length) {\r\n            return <span/>;\r\n        }\r\n        return (\r\n            <nav role=\"navigation\" className=\"navbar is-fixed-top\">\r\n                <div className='navbar-brand'>\r\n                    <span className='navbar-item'>\r\n                        <img src='./pokeball.png' alt='pokeball'/>\r\n                        <span style={ { 'paddingLeft': '0.5em' } }>Pokemon Team Builder</span>\r\n                    </span>\r\n                    <button className={ this.state.active ? 'navbar-burger button is-active' : 'navbar-burger button' }\r\n                            aria-label=\"menu\"\r\n                            aria-expanded=\"false\" onClick={ () => this.setState({ active: !this.state.active }) }>\r\n                        <span aria-hidden=\"true\"/>\r\n                        <span aria-hidden=\"true\"/>\r\n                        <span aria-hidden=\"true\"/>\r\n                    </button>\r\n                </div>\r\n                <div id=\"header\" className={ this.state.active ? 'navbar-menu is-active' : 'navbar-menu' }>\r\n                    <div className='navbar-start' style={ { 'justifyContent': 'space-between' } }>\r\n                        <TypeFilter/>\r\n                        <GameFilter/>\r\n                        <GenerationFilter/>\r\n                        <CoverageFilter/>\r\n                        <ResetFilters/>\r\n                    </div>\r\n                    <div className='navbar-end'>\r\n                        <PartiesLink/>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Party from \"./Party\";\r\nimport Navbar from \"./navbar\";\r\nimport '../../styles/header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <span>\r\n            <Navbar/>\r\n            <div className='party'>\r\n                <Party/>\r\n            </div>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default connect()(Header);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemon.all,\r\n});\r\n\r\nconst Footer = (props) => {\r\n    return props.pokemon.length > 0 ? (<footer className=\"text-center\">\r\n        <div className=\"columns\" style={ { 'position': 'absolute', 'bottom': 0, 'width': '100%' } }>\r\n            <span className=\"column\">&copy; of bgoff1</span>\r\n            <span className=\"column\">Pokémon info and images fetched from PokeAPI</span>\r\n            <span className=\"column\">Pokémon is &copy; of Nintendo, 1995-2019</span>\r\n        </div>\r\n    </footer>) : null;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport Body from './Body';\r\nimport Header from \"./Header\";\r\nimport Footer from './Body/Footer';\r\n\r\nconst Page = () => {\r\n    return (\r\n        <div style={ { 'position': 'relative', 'minHeight': '100vh' } }>\r\n            <Header/>\r\n            <Body/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect()(Page);\r\n","import { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport { removeParty } from \"../actions\";\r\nimport { getImageSource } from \"../utils/pokemon\";\r\n\r\nconst mapStateToProps = state => ({\r\n    savedParties: state.savedParties,\r\n    pokemon: state.pokemon\r\n});\r\n\r\nclass Parties extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        for (const party of this.props.savedParties.parties) {\r\n            while (party.length < 6) {\r\n                party.push('');\r\n            }\r\n        }\r\n    }\r\n\r\n    onClick(partyIndex) {\r\n        this.props.dispatch(removeParty(this.props.savedParties.parties[ partyIndex ]));\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this && this.props && this.props.savedParties && this.props.pokemon) {\r\n            const pokemon = this.props.pokemon.all.concat(this.props.pokemon.party);\r\n            const div = <div>&nbsp;</div>;\r\n            const parties = this.props.savedParties.parties;\r\n            return (\r\n                <div>\r\n                    { parties.map((party, partyIndex) => {\r\n                            return <div className='text-center' key={ partyIndex }>\r\n                                { party.map((value, index) => {\r\n                                    const poke = pokemon.find((each) => each.name === value);\r\n                                    if (!poke) {\r\n                                        return <span style={ { 'display': 'inline-block' } } key={ index }\r\n                                                     onClick={ () => this.onClick(partyIndex) }><span\r\n                                            className='empty'/>{ div }{ div }<br/></span>\r\n                                    }\r\n                                    let className;\r\n                                    let types;\r\n                                    if (poke.types.length === 1) {\r\n                                        className = `circle ${ poke.types[ 0 ] }`;\r\n                                        types = (<span className={ 'type ' + poke.types[ 0 ] }>\r\n                                                    { poke.types[ 0 ] }\r\n                                                </span>);\r\n                                    } else {\r\n                                        className = `circle ${ poke.types[ 1 ] }-main ${ poke.types[ 0 ] }-secondary`;\r\n                                        types = (<span><span className={ 'type ' + poke.types[ 1 ] }>\r\n                                                    { poke.types[ 1 ] }\r\n                                                    </span><span className={ 'type ' + poke.types[ 0 ] }>\r\n                                                    { poke.types[ 0 ] }\r\n                                                </span></span>);\r\n                                    }\r\n                                    return (\r\n                                        <span style={ { 'display': 'inline-block' } } key={ index }>\r\n                                            <img className={ className }\r\n                                                 src={ getImageSource(poke) }\r\n                                                 alt={ poke.name } width={ '96px' } height={ '96px' }\r\n                                                 onClick={ () => this.onClick(partyIndex) }/>\r\n                                            <div className='name'>{ poke.name }</div>\r\n                                            <div>{ types }</div><br/>\r\n                                        </span>\r\n                                    )\r\n                                }) }</div>\r\n                        }\r\n                    ) }\r\n                </div>\r\n            );\r\n        }\r\n        return <span/>\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Parties);\r\n","import types from \"../utils/types\";\r\n\r\nconst initialState = {};\r\nfor (const type of types) {\r\n    initialState[ type ] = true;\r\n}\r\nconst typeFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_TYPE_FILTER':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type) && type === action.typeToFlip) {\r\n                    state[ type ] = !state[ type ];\r\n                    break;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'FLIP_ALL_TYPE_FILTER_TRUE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[ type ] = true;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'FLIP_ALL_TYPE_FILTER_FALSE':\r\n            for (const type in state) {\r\n                if (state.hasOwnProperty(type)) {\r\n                    state[ type ] = false;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'RESET_ALL_FILTERS':\r\n            for (const type of types) {\r\n                state[ type ] = true;\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default typeFilter\r\n","const generations = [ 1, 2, 3, 4, 5, 6, 7 ];\r\n\r\nconst initialState = {};\r\nfor (const type of generations) {\r\n    initialState[ type ] = true;\r\n}\r\nconst generationFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FLIP_GEN_FILTER':\r\n            for (const generation in state) {\r\n                if (state.hasOwnProperty(generation) && generation === action.generationToFlip) {\r\n                    state[ generation ] = !state[ generation ];\r\n                    break;\r\n                }\r\n            }\r\n            return { ...state };\r\n        case 'RESET_ALL_FILTERS':\r\n            for (const type of generations) {\r\n                state[type] = true;\r\n            }\r\n            return { ...state };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default generationFilter;\r\n","import { getPartyTypes, isAPartyMemberStrong } from '../utils/';\r\n\r\nconst insertPokemon = (state, pokemon) => {\r\n    const all = state.all;\r\n    let index = 0;\r\n    if (all.find(x => x.name === pokemon.name)) {\r\n        return { ...state };\r\n    }\r\n    for (const poke of all) {\r\n        if (poke.number > index && poke.number < pokemon.number) {\r\n            index = state.all.indexOf(poke) + 1;\r\n            if (index === pokemon.number - 1) break;\r\n        }\r\n    }\r\n    all.splice(index, 0, pokemon);\r\n    return { ...state, all };\r\n};\r\n\r\nconst initialState = {\r\n    all: [],\r\n    party: [],\r\n    checkingParty: false,\r\n    lackingCoverage: []\r\n};\r\nconst pokemon = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'ADD_POKEMON_BULK':\r\n                if (action.pokemon) {\r\n                    const all = action.pokemon;\r\n                    return {\r\n                        ...state,\r\n                        all\r\n                    };\r\n                } else return { ...state };\r\n            case 'ADD_TO_PARTY':\r\n                if (action.pokemon) {\r\n                    const party = state.party;\r\n                    for (const poke of state.all) {\r\n                        if (poke.name === action.pokemon.name) {\r\n                            party.push(poke);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return { ...state, party };\r\n                } else return { ...state };\r\n            case 'REMOVE_FROM_PARTY':\r\n                if (action.index || action.index === 0) {\r\n                    const party = state.party;\r\n                    party.splice(action.index, 1);\r\n                    return { ...state, party };\r\n                }\r\n                return { ...state };\r\n            case 'ADD_POKEMON':\r\n                if (action.pokemon) {\r\n                    return insertPokemon(state, action.pokemon);\r\n                } else return { ...state };\r\n            case 'REMOVE_POKEMON':\r\n                if (action.index || action.index === 0) {\r\n                    let all = state.all;\r\n                    all.splice(action.index, 1);\r\n                    return { ...state, all };\r\n                }\r\n                return { ...state };\r\n            case 'CHECK_PARTY':\r\n                if (state.checkingParty) {\r\n                    state.checkingParty = false;\r\n                    state.lackingCoverage = [];\r\n                    return { ...state };\r\n                }\r\n                if (state.party.length === 0) {\r\n                    return { ...state };\r\n                }\r\n                state.checkingParty = true;\r\n                let partyTypes = getPartyTypes(state.party);\r\n                for (const pokemon of state.all) {\r\n                    if (!isAPartyMemberStrong(partyTypes, pokemon)) {\r\n                        state.lackingCoverage.push(pokemon);\r\n                    }\r\n                }\r\n                return { ...state };\r\n            case 'RESET_ALL_FILTERS':\r\n                state.checkingParty = false;\r\n                state.lackingCoverage = [];\r\n                return { ...state };\r\n            case 'CLEAR_PARTY':\r\n                state.party = [];\r\n                for (const partyMember of action.members) {\r\n                    state = insertPokemon(state, partyMember);\r\n                }\r\n                return { ...state };\r\n            default:\r\n                return { ...state };\r\n        }\r\n    }\r\n;\r\n\r\nexport default pokemon;\r\n","const initialState = {\r\n    parties: []\r\n};\r\nconst savedParties = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_PARTY':\r\n            if (action.party) {\r\n                console.log('state', state.parties);\r\n                console.log('action', action.party);\r\n                const parties = state.parties;\r\n                parties.push(action.party);\r\n                return {...state, parties};\r\n            }\r\n            return { ...state };\r\n        case 'REMOVE_PARTY':\r\n            if (action.party) {\r\n                const parties = state.parties.filter(item => item !== action.party);\r\n                return {...state, parties };\r\n            }\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default savedParties;\r\n","import { combineReducers } from 'redux';\r\nimport typeFilter from './typeFilter';\r\nimport generationFilter from './generationFilter';\r\nimport gameFilter from './gameFilter';\r\nimport pokemon from \"./pokemon\";\r\nimport savedParties from './savedParties';\r\n\r\nexport default combineReducers({\r\n    typeFilter,\r\n    generationFilter,\r\n    gameFilter,\r\n    pokemon,\r\n    savedParties\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport reducer from './reducers/';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nexport default () => {\r\n    const persistConfig = {\r\n        key: 'root',\r\n        storage,\r\n        stateReconciler: hardSet\r\n    };\r\n\r\n    const persistedReducer = persistReducer(persistConfig, reducer);\r\n    // noinspection JSUnresolvedVariable\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(persistedReducer, composeEnhancers(\r\n        applyMiddleware(thunkMiddleware)\r\n    ));\r\n    const persistor = persistStore(store);\r\n    return { store, persistor };\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Page from \"./components/Page\";\nimport Parties from './components/Parties';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport createStore from './createStore';\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\nconst { store, persistor } = createStore();\n\n\nconst App = () => (\n    <Provider store={ store }>\n        <PersistGate loading={ null } persistor={ persistor }>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path=\"/\" component={ Page }/>\n                    <Route path=\"/parties\" component={ Parties }/>\n                    <Redirect to=\"/\"/>\n                </Switch>\n            </Router>\n        </PersistGate>\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}